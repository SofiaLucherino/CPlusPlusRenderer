{
	"nodes":[
		{"id":"db4520779cc887e6","type":"text","text":"Колір\n- Можемо побачити що 8 біт для кожного каналу кольору достатньо щоб око бачило плавний перехід між кольорами\n\nПоложення\n- Ми використовуємо 32бітні числа з плаваючою точкою для кодування положення точок у нормованому і тривимірному просторі\n- Проте якщо ми підвищимо якість вікна наприклад до 1920 на 1080 пікселів, то ми зможемо побачити що деякі пікселі в центрі квадратів не растеризуються\n- Це пов'язано з специфікою чисел з плаваючою точкою і нашого оптимізованого алгоритму растеризації","x":-440,"y":-460,"width":680,"height":349,"color":"#ff0066"},
		{"id":"1a087b1630748f9a","type":"text","text":"Числа з плаваючою точкою\n- усе число можна поділити на три основні складові: біт знаку, експонента і мантиса\n- біт знаку відповідно вказує на те чи число є від'ємним чи додатнім\n- біти експоненти вказують на те в якому степені знаходиться 2 на яку ми множимо число\n- біти мантиси вказують на те яка буде дробова частина числа, \n\nПомилки округлення\n- Таким чином ми можемо побачити що з кожним збільшенням експоненти на 1 точність мантиси зменшується на один біт, через це між 1 і 2 стільки ж само чисел закодовано скільки ж і між 16 і 32, але очевидно що другий проміжок значно більший, тобто ми втрачаємо точність зі збільшенням експоненти\n\nНищівне скасування(Catastrophic cancellation)\n- Спробуємо відняти два приблизно однакові числа один від одного \n- У результаті отримаємо число з меншою експонентою і меншою кількістю значущих цифр\n\nОтже, наша поточно проблема з алгоритмом пов'язана з великою кількістю операцій над числами з плаваючою точкою, що можуть призводити до помилок округлення і нищівного скасування\nДо цього ми уникали цієї проблеми так як алгоритм не передбачав такої кількості операцій, але наш новий алгоритм дуже швидкий, тому спробуємо змінити тип чисел відійшовши від плаваючої точки","x":-440,"y":-80,"width":756,"height":645,"color":"#ff0095"},
		{"id":"732875aa01f7edab","type":"file","file":"!Personal/Now/CG/Labs/CPlusPlus3DRender/14. NumbersPrecision/PNG/SinglePrecisionFloatNumber.png","x":420,"y":-341,"width":943,"height":460,"color":"#ff0095"},
		{"id":"337dcfcb16c0bbe7","type":"file","file":"!Personal/Now/CG/Labs/CPlusPlus3DRender/14. NumbersPrecision/PNG/Pasted image 20241005192613.png","x":420,"y":160,"width":620,"height":451,"color":"#ff0095"},
		{"id":"6d561f884c5b5621","type":"text","text":"Цілочислена растеризація\n- Коли ми проектуємо вершини ми перетворюємо їх у пікселі і зберігаємо координати в цілих числах\n- Потім обчислюємо різницю рівняння ребер по X/Y за допомомогою цілочислених типів і растеризуємо трикутник згідно результату\n\nПереповнення (недоповнення)\n- Цілочислені типи також мають обмежену кількість значень, наприклад 8бітні числа мають лише 256 значеь і якщо ми до 127 додамо 1, то число переповниться, і воно буде дорівнювати найменшому значенню -128\n- Яким повинно бути наше ціле число щоб при використанні вікна 1920х1080 не відбулося переповнення числа?","x":-440,"y":600,"width":756,"height":374,"color":"#ff00c8"},
		{"id":"d350aa04905c3ed5","type":"file","file":"!Personal/Now/CG/Labs/CPlusPlus3DRender/14. NumbersPrecision/PNG/Pasted image 20241005235457.png","x":380,"y":1026,"width":779,"height":179,"color":"#ff00f7"},
		{"id":"a56232a33e6412f5","type":"text","text":"Обчислення точності растеризатора\n- Обчислимо які максимальні межі числа після використання рівняння ребра\n- Для кожного числа його межі будуть між -2^(p-1) i 2^(p-1) - 1, де p це кількість бітів дл кодування одного числа\n- Тепер обчислимо діпазон для рівняння ребра по його частинам\n","x":-440,"y":1026,"width":756,"height":176,"color":"#ff00f7"},
		{"id":"7064c5a90347b6ea","type":"text","text":"Віднімання двох елементів\n- При відніманні двох елемнтів маємо що максимальне можливе число це 2^p - 1, а мінімальне -2^p + 1","x":1002,"y":1250,"width":756,"height":110,"color":"#c800ff"},
		{"id":"095ab07c9f682949","type":"text","text":"Множення двох віднятих елементів\n- Після множення максимальне число стає (2^p - 1)^2 , а мінімальне -(2^p - 1)^2","x":1002,"y":1400,"width":756,"height":80,"color":"#c800ff"},
		{"id":"a5a4b6d96cc05659","type":"text","text":"Віднімання результатів\n- Після ще одного віднімання максимальне число стає 2\\*(2^p - 1)^2\n- Мінімальне -2\\*(2^p - 1)^2","x":1002,"y":1521,"width":774,"height":114,"color":"#c800ff"},
		{"id":"7acb9ad6cb1692c5","type":"file","file":"!Personal/Now/CG/Labs/CPlusPlus3DRender/14. NumbersPrecision/PNG/Pasted image 20241006003551.png","x":1320,"y":816,"width":986,"height":389,"color":"#c800ff"},
		{"id":"3bbb58b6f1787ec6","type":"file","file":"!Personal/Now/CG/Labs/CPlusPlus3DRender/14. NumbersPrecision/PNG/Pasted image 20241006172935.png","x":1920,"y":1260,"width":843,"height":220,"color":"#c800ff"},
		{"id":"23deb01a6fb85a4a","type":"file","file":"!Personal/Now/CG/Labs/CPlusPlus3DRender/14. NumbersPrecision/PNG/Pasted image 20241006173228.png","x":1920,"y":1521,"width":700,"height":293,"color":"#c800ff"},
		{"id":"6740a8010ae8e31e","type":"text","text":"Обчислення точності растеризатора\n- Отримаємо що модуль рівняння ребра\n\t- | (Px- Ax)(By - Ay) - (Py - Ay)(Bx - Ax) | >= 2\\*(2^p - 1)^2\n- Розкриємо дужки\n\t- = 2*(2^2p - 2^p - 2^p + 1)\n- Так як ступінь 2p значно більший ніж p чи число 1, то ми можемо ці частини відкинути\n- Отримаємо\n\t- | (Px- Ax)(By - Ay) - (Py - Ay)(Bx - Ax) | >= 2^(2p + 1)\n- Якщо ми маємо ціле число що складається з 32 бітів, то його межі знаходяться у межах (-2^31; 2^31 - 1)\n- Так як ми на попередньому кроці відкинули (- 2^p - 2^p + 1), де було +1, то зараз ми можемо відкинути -1 з найбільшої межі 32бітного числа, тим самим спростивши ці межі\n- Прирівняємо нові межі до формули меж при рівнянні ребра\n\t- | 2^31 | = | 2^(2p + 1) |\n\t- 31 = 2p + 1\n\t- p = 15\n- Відповідно Ми можемо закодувати число у максимумі 15 бітах щоб воно не втрачало своєї точності після рівняння ребра\n\t- це діапазон від -16 384 до 16 383\n- Якщо ж ми візьмемо наше число з плаваюсою точкою, то в ньому лише 24 біти для мантиси\n\t- тобто 24 = 2p + 1\n\t- p = 11.5 = 11\n\t- тобто маємо діапазон від -1024 до 1023, і якщо наш буффер кадру більший за це значення, то точність обчислень буде набагато меншою","x":-440,"y":1258,"width":756,"height":713,"color":"#ff00f7"}
	],
	"edges":[
		{"id":"7adb44f2dfa04f79","fromNode":"1a087b1630748f9a","fromSide":"right","toNode":"732875aa01f7edab","toSide":"left"},
		{"id":"9422552458b77a5b","fromNode":"1a087b1630748f9a","fromSide":"right","toNode":"337dcfcb16c0bbe7","toSide":"left"},
		{"id":"4bb06e1f83f53b6a","fromNode":"a56232a33e6412f5","fromSide":"right","toNode":"d350aa04905c3ed5","toSide":"left"},
		{"id":"d41fc30e3e33ec84","fromNode":"095ab07c9f682949","fromSide":"right","toNode":"3bbb58b6f1787ec6","toSide":"left"},
		{"id":"a177c37eed884856","fromNode":"d350aa04905c3ed5","fromSide":"bottom","toNode":"7064c5a90347b6ea","toSide":"left"},
		{"id":"0f1d95fb01dd7d23","fromNode":"7064c5a90347b6ea","fromSide":"left","toNode":"095ab07c9f682949","toSide":"left"},
		{"id":"c0d7cfca744cdfb5","fromNode":"095ab07c9f682949","fromSide":"left","toNode":"a5a4b6d96cc05659","toSide":"left"},
		{"id":"6465cf2b268c98c4","fromNode":"7064c5a90347b6ea","fromSide":"right","toNode":"7acb9ad6cb1692c5","toSide":"bottom"},
		{"id":"5547e222248d57ee","fromNode":"a5a4b6d96cc05659","fromSide":"right","toNode":"23deb01a6fb85a4a","toSide":"left"},
		{"id":"10caa78718dc3015","fromNode":"d350aa04905c3ed5","fromSide":"bottom","toNode":"6740a8010ae8e31e","toSide":"right"},
		{"id":"293c47a99d1ed7c1","fromNode":"a5a4b6d96cc05659","fromSide":"left","toNode":"6740a8010ae8e31e","toSide":"right"}
	]
}