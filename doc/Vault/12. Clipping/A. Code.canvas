{
	"nodes":[
		{"id":"640a9cf1ac1a931d","type":"text","text":"Інтерполюємо відповідно до коефіціента координати і властивості вершин","x":953,"y":1477,"width":367,"height":82,"color":"4"},
		{"id":"15b4ed29b5ccda79","type":"text","text":"Повертаємо результат","x":953,"y":1576,"width":250,"height":60,"color":"4"},
		{"id":"8488d74a02b46643","type":"text","text":"\t\treturn Result;\n\t}\n","x":1420,"y":1562,"width":277,"height":88,"color":"3"},
		{"id":"81a3b923d25c2c24","type":"text","text":"\t\tdefault:\n\t\t{\n\t\t\tInvalidCodePath;\n\t\t} break;\n\t}","x":1558,"y":1296,"width":359,"height":178,"color":"3"},
		{"id":"ab98ad1558da7a3c","type":"text","text":"\tResult.Pos = (Start.Pos * (1.0f - S)) + (End.Pos * S);\n\tResult.UV = ((1.0f - S) * Start.UV) + (S * End.UV);\n","x":1558,"y":1474,"width":539,"height":88,"color":"3"},
		{"id":"e7c4d99eb24dada4","type":"text","text":"\tclip_vertex CalculateIntersection(clip_vertex Start, clip_vertex End, clip_axis Axis)\n\t{","x":1420,"y":26,"width":847,"height":88,"color":"3"},
		{"id":"859605c76561f1be","type":"text","text":"\tclip_vertex Result = {};\n","x":1558,"y":114,"width":293,"height":58,"color":"3"},
		{"id":"92201ae9cbbd0585","type":"text","text":"\tswitch (Axis)\n\t{","x":1558,"y":172,"width":203,"height":88,"color":"3"},
		{"id":"b826a3c266a536a4","type":"text","text":"\tcase ClipAxis_Left:\n\t{\n\t\tS = -(Start.Pos.w + Start.Pos.x) / ((End.Pos.x - Start.Pos.x) + (End.Pos.w - Start.Pos.w));\n\t} break;","x":1817,"y":260,"width":909,"height":148,"color":"3"},
		{"id":"04ca626f98155ca1","type":"text","text":"\tcase ClipAxis_Right:\n\t{\n\t\tS = (Start.Pos.w - Start.Pos.x) / ((End.Pos.x - Start.Pos.x) - (End.Pos.w - Start.Pos.w));\n\t} break;","x":1817,"y":408,"width":900,"height":148,"color":"3"},
		{"id":"a51cb1025eaa0c24","type":"text","text":"\tcase ClipAxis_Top:\n\t{\n\t\tS = (Start.Pos.w - Start.Pos.y) / ((End.Pos.y - Start.Pos.y) - (End.Pos.w - Start.Pos.w));\n\t} break;","x":1817,"y":556,"width":900,"height":148,"color":"3"},
		{"id":"a015327c494c5522","type":"text","text":"\tcase ClipAxis_Bottom:\n\t{\n\t\tS = -(Start.Pos.w + Start.Pos.y) / ((End.Pos.y - Start.Pos.y) + (End.Pos.w - Start.Pos.w));\n\t} break;","x":1818,"y":704,"width":909,"height":148,"color":"3"},
		{"id":"4fd1ac9ce82337d8","type":"text","text":"\tcase ClipAxis_Near:\n\t{\n\t\tS = -(Start.Pos.z) / (End.Pos.z - Start.Pos.z);\n\t} break;","x":1817,"y":852,"width":548,"height":148,"color":"3"},
		{"id":"ac892e4be20be94c","type":"text","text":"\tcase ClipAxis_Far:\n\t{\n\t\tS = (Start.Pos.w - Start.Pos.z) / ((End.Pos.z - Start.Pos.z) - (End.Pos.w - Start.Pos.w));\n\t} break;","x":1817,"y":1000,"width":900,"height":148,"color":"3"},
		{"id":"050a75be5b290b97","type":"text","text":"\tcase ClipAxis_W:\n\t{\n\t\tS = (W_CLIPPING_VALUE - Start.Pos.w) / (End.Pos.w - Start.Pos.w);\n\t} break;","x":1818,"y":1148,"width":704,"height":148,"color":"3"},
		{"id":"aa1d8925a5c3bdb6","type":"text","text":"Створимо функцію, вона буде приймати аргументи початкової точки, кінцевої точки відрізка і площину з якою перетинається відрізок","x":953,"y":26,"width":429,"height":88,"color":"4"},
		{"id":"7789331e0909bed3","type":"text","text":"clipper.cpp","x":480,"y":-180,"width":250,"height":60,"color":"1"},
		{"id":"024b3b50241def7c","type":"text","text":"Створюємо змінну з результатом функції","x":953,"y":112,"width":250,"height":60,"color":"4"},
		{"id":"1b65d71008d5599b","type":"text","text":"В залежності від площини рахуємо відповідно коефіціент S","x":953,"y":187,"width":304,"height":58,"color":"4"},
		{"id":"5ba9442ac1146592","type":"text","text":"У функції CalculateIntersection","x":780,"y":-60,"width":250,"height":60,"color":"6"},
		{"id":"56b342d383aec806","type":"text","text":"\t#if !defined(CLIPPER_H)\n\t...\n\t#define CLIPPER_H\n\t#endif","x":-813,"y":-109,"width":285,"height":148,"color":"3"},
		{"id":"b0b84f77df20218f","type":"text","text":"Створюємо директиви для певних значень","x":-377,"y":-65,"width":250,"height":60,"color":"4"},
		{"id":"9936753c1775c1eb","type":"text","text":"Створюємо псевдонім типу для назв площин","x":-377,"y":177,"width":250,"height":60,"color":"4"},
		{"id":"97eaea0add30e9c7","type":"text","text":"\tenum clip_axis \n\t{\n\t\tClipAxis_None,\n\n\t\tClipAxis_Left,\n\t\tClipAxis_Right,\n\t\tClipAxis_Top,\n\t\tClipAxis_Bottom,\n\t\tClipAxis_Near,\n\t\tClipAxis_Far,\n\t\tClipAxis_W,\n\t};","x":-90,"y":25,"width":293,"height":364,"color":"3"},
		{"id":"c01aa9b9f6765bf7","type":"text","text":"\t#define W_CLIPPING_VALUE 0.0001f\n\t#define CLIP_MAX_NUM_VERTICS 128\n","x":-56,"y":-79,"width":359,"height":88,"color":"3"},
		{"id":"3890d011a60ca3cc","type":"text","text":"Створюємо структуру яка буде зберігати координати і властивості точки","x":-377,"y":487,"width":364,"height":58,"color":"4"},
		{"id":"f1de0dd2ff10538e","type":"text","text":"Створюємо структуру що буде віддавати массив з вихідними трикутиками після обробки одного трикутниика","x":-377,"y":636,"width":501,"height":58,"color":"4"},
		{"id":"70327237798d60d9","type":"text","text":"(Максимальна кількість вихідних трикутників - 128 відповідно до двійки в степені кількості площин піраміди огляду)","x":-377,"y":694,"width":520,"height":58,"color":"2"},
		{"id":"712bb2ca5b7f200b","type":"text","text":"\tstruct clip_vertex \n\t{\n\t\tv4 Pos;\n\t\tv2 UV;\n\t};","x":32,"y":427,"width":244,"height":178,"color":"3"},
		{"id":"52b90ed4624150ef","type":"text","text":"\tstruct clip_result \n\t{\n\t\tu32 NumTriangles;\n\t\tclip_vertex Vertices[CLIP_MAX_NUM_VERTICS];\n\t};","x":265,"y":605,"width":515,"height":177,"color":"3"},
		{"id":"69ecf039a71fa955","type":"text","text":"clipper.h","x":-1114,"y":-169,"width":250,"height":60,"color":"1"},
		{"id":"0cea1e2d11a311c2","type":"text","text":"Перевіряємо чи був цей файл вже підключенний","x":-1114,"y":-65,"width":250,"height":60,"color":"4"},
		{"id":"8f231512f5fcc9f3","type":"text","text":"\tb32 Result = false;\n","x":4021,"y":108,"width":252,"height":58,"color":"3"},
		{"id":"0f1cb674d8dc3bb6","type":"text","text":"\tswitch (Axis)\n\t{\n","x":4021,"y":166,"width":203,"height":88,"color":"3"},
		{"id":"a9d343fd757abfdc","type":"text","text":"\tcase ClipAxis_Left: \n\t{\n\t\tResult = Vertex.Pos.x < -Vertex.Pos.w;\n\t} break;\n","x":4224,"y":254,"width":474,"height":148,"color":"3"},
		{"id":"a44e5abf5c52f6c7","type":"text","text":"Повертаємо результат роботи функції","x":3547,"y":1481,"width":250,"height":60,"color":"4"},
		{"id":"4a0d050f8764ee3f","type":"text","text":"\t\treturn Result;\n\t}\n","x":3884,"y":1467,"width":277,"height":88,"color":"3"},
		{"id":"01fbbe08bf2c1b5c","type":"text","text":"\tcase ClipAxis_Near: \n\t{\n\t\tResult = Vertex.Pos.z < 0.0f;\n\t} break;\n","x":4224,"y":845,"width":400,"height":148,"color":"3"},
		{"id":"d06a4c14fc6062de","type":"text","text":"\tcase ClipAxis_Far: \n\t{\n\t\tResult = Vertex.Pos.z > Vertex.Pos.w;\n\t} break;\n","x":4224,"y":993,"width":466,"height":148,"color":"3"},
		{"id":"610e8e6fb3dff65e","type":"text","text":"\tcase ClipAxis_W: \n\t{\n\t\tResult = Vertex.Pos.w < W_CLIPPING_VALUE;\n\t} break;\n","x":4224,"y":1141,"width":498,"height":148,"color":"3"},
		{"id":"8d7259059b5c532c","type":"text","text":"\t\tdefault: \n\t\t{\n\t\t\tInvalidCodePath;\n\t\t} break;\n\t}\n","x":4224,"y":1289,"width":359,"height":178,"color":"3"},
		{"id":"0288c857756810bc","type":"text","text":"У функції IsBehindPlane","x":2727,"y":-66,"width":250,"height":60,"color":"6"},
		{"id":"dbe3da508b93656e","type":"text","text":"Стфорюємо функцію, задаючи аргкменти: точку і площину ","x":2887,"y":9,"width":290,"height":58,"color":"4"},
		{"id":"ebd6ed14fa87b962","type":"text","text":"\tb32 IsBehindPlane(clip_vertex Vertex, clip_axis Axis)\n\t{\n","x":3241,"y":-6,"width":531,"height":88,"color":"3"},
		{"id":"1b6d235b5e43a8fb","type":"text","text":"Створюємо булеву змінну результату ініціалізуючи її одразу значенням 0 (false)","x":3547,"y":108,"width":372,"height":58,"color":"4"},
		{"id":"4b2caa52f4ee0949","type":"text","text":"Відповідно до площини піраміди огляду робимо перевірку по координатам чи точка знаходиться за площиною, і якщо так - перезаписуємо результат значенням вірності","x":3547,"y":284,"width":500,"height":88,"color":"4"},
		{"id":"2583db9ded04a150","type":"text","text":"\tcase ClipAxis_Right: \n\t{\n\t\tResult = Vertex.Pos.x > Vertex.Pos.w;\n\t} break;\n","x":4224,"y":402,"width":466,"height":148,"color":"3"},
		{"id":"cab4fd1c12353fb1","type":"text","text":"\tcase ClipAxis_Top: \n\t{\n\t\tResult = Vertex.Pos.y > Vertex.Pos.w;\n\t} break;\n","x":4224,"y":550,"width":466,"height":148,"color":"3"},
		{"id":"5e9180ac1efc5eaf","type":"text","text":"\tcase ClipAxis_Bottom: \n\t{\n\t\tResult = Vertex.Pos.y < -Vertex.Pos.w;\n\t} break;\n","x":4224,"y":698,"width":474,"height":147,"color":"3"},
		{"id":"b732a504fe95056a","type":"text","text":"У функції ClipPolygonToAxis","x":5500,"y":-35,"width":250,"height":60,"color":"6"},
		{"id":"0b4d4980fb4e6bc0","type":"text","text":"Створимо функцію, що буде приймати аргументи початкового буфферу трикутників, вихідного буфферу трикутників і площину з якою робимо відсікання","x":5660,"y":25,"width":466,"height":88,"color":"4"},
		{"id":"f4d34de7fb451f80","type":"text","text":"\tvoid ClipPolygonToAxis(clip_result* Input, clip_result* Output, clip_axis Axis) \n\t{\n","x":6171,"y":25,"width":745,"height":88,"color":"3"},
		{"id":"7371d18d355bb1af","type":"text","text":"Кількість трикутників в вихідному буффері прирівнюємо до нуля","x":6611,"y":145,"width":311,"height":58,"color":"4"},
		{"id":"bcb2a2844cdef3bf","type":"text","text":"Творимо цікл де ітеруємо трикутники вихідного массиву","x":6611,"y":230,"width":288,"height":61,"color":"4"},
		{"id":"3a94ccf0c043ec8d","type":"text","text":"\tOutput->NumTriangles = 0;","x":6971,"y":145,"width":302,"height":58,"color":"3"},
		{"id":"1ac23afcbb0b9ea9","type":"text","text":"\tfor (u32 TriangleId = { 0 }; TriangleId < Input->NumTriangles; ++TriangleId)\n\t{","x":6971,"y":217,"width":720,"height":88,"color":"3"},
		{"id":"585d410ed665b5d6","type":"text","text":"\tu32 VertexId[3] =\n\t{\n\t\t3 * TriangleId + 0,\n\t\t3 * TriangleId + 1,\n\t\t3 * TriangleId + 2\n\t};\n","x":7245,"y":305,"width":318,"height":208,"color":"3"},
		{"id":"8e0f4fbe62ce99ec","type":"text","text":"Рахуємо індекси вершин відповідно до поточного трикутника","x":6828,"y":380,"width":330,"height":58,"color":"4"},
		{"id":"f8a5229de9a5035e","type":"text","text":"\tclip_vertex Vertices[] =\n\t{\n\t\tInput->Vertices[VertexId[0]],\n\t\tInput->Vertices[VertexId[1]],\n\t\tInput->Vertices[VertexId[2]]\n\t};\n","x":7245,"y":542,"width":400,"height":208,"color":"3"},
		{"id":"65e9803c09b2b58f","type":"text","text":"Виписуємо вершини трикутника у окремий массив вершин","x":6828,"y":617,"width":302,"height":58,"color":"4"},
		{"id":"4a34122e876b3f04","type":"text","text":"Дві вершини знаходяться за площиною - обрізаємо вершини що знаходяться за площиною і на їх місце у вихідному буффері ставимо відрізані (ітеруємо по ребрам а не вершинам, щоб вирахувати інтерпольовані точки і зберегти направленність)","x":6566,"y":1413,"width":681,"height":88,"color":"4"},
		{"id":"1bd89750f5b3b831","type":"text","text":"\tcase 2: \n\t{\n\t\t// Adding cutted Triangle to Output\n\t\tu32 CurrTriangleId = Output->NumTriangles++;\n\t\tu32 CurrVertexId = 0;\n\n\t\tfor (u32 EdgeId = { 0 }; EdgeId < 3; ++EdgeId) \n\t\t{\n\t\t\tu32 StartVertexId = EdgeId;\n\t\t\tu32 EndVertexId = EdgeId == 2 ? 0 : (EdgeId + 1);\n\n\t\t\tclip_vertex StartVertex = Vertices[StartVertexId];\n\t\t\tclip_vertex EndVertex = Vertices[EndVertexId];\n\n\t\t\tb32 StartBehindPlane = BehindPlane[StartVertexId];\n\t\t\tb32 EndBehindPlane = BehindPlane[EndVertexId];\n\n\t\t\tif (!StartBehindPlane) \n\t\t\t{\n\t\t\t\tOutput->Vertices[3 * CurrTriangleId + CurrVertexId++] = StartVertex;\n\t\t\t}\n\n\t\t\tif (StartBehindPlane == !EndBehindPlane)\n\t\t\t{\n\t\t\t\tOutput->Vertices[3 * CurrTriangleId + CurrVertexId++] = CalculateIntersection(StartVertex, EndVertex, Axis);\n\t\t\t}\n\t\t}\n\t} break;\n","x":7164,"y":1569,"width":1211,"height":748,"color":"3"},
		{"id":"2882cb346f7904e8","type":"text","text":"Якесь інше значення - код неправильно працює","x":6743,"y":1720,"width":253,"height":58,"color":"4"},
		{"id":"bcecd9de209cdacc","type":"text","text":"\t\t\t\tdefault: \n\t\t\t\t{\n\t\t\t\t\tInvalidCodePath;\n\t\t\t\t} break;\n\t\t\t}\n\t\t}\n\t}","x":6625,"y":1845,"width":490,"height":238,"color":"3"},
		{"id":"b45fe7adbecf409c","type":"text","text":"\tb32 BehindPlane[3] =\n\t{\n\t\tIsBehindPlane(Vertices[0], Axis),\n\t\tIsBehindPlane(Vertices[1], Axis),\n\t\tIsBehindPlane(Vertices[2], Axis)\n\t};\n","x":7273,"y":785,"width":433,"height":208,"color":"3"},
		{"id":"9630d61826642138","type":"text","text":"Записуємо чи знаходиться кожна вершина поза площиноюб ш записуємо в окремий массив","x":6828,"y":860,"width":419,"height":58,"color":"4"},
		{"id":"bd1e2cb0f4b608b5","type":"text","text":"\tu32 NumBehindPlane = BehindPlane[0] + BehindPlane[1] + BehindPlane[2];\n\tswitch (NumBehindPlane) \n\t{\n","x":7273,"y":993,"width":671,"height":118,"color":"3"},
		{"id":"71a69d3199d1b993","type":"text","text":"Рахуємо Скільки вершин знаходяться за площиною і в залежності від кількості записуємо трикутники у вихідний массив","x":6828,"y":1008,"width":367,"height":88,"color":"4"},
		{"id":"f02b6effab040adf","type":"text","text":"\tcase 0: \n\t{\n\t\t//Adding full Triangle to Output\n\t\tu32 CurrTriangleId = Output->NumTriangles++;\n\t\tOutput->Vertices[3 * CurrTriangleId + 0] = Vertices[0];\n\t\tOutput->Vertices[3 * CurrTriangleId + 1] = Vertices[1];\n\t\tOutput->Vertices[3 * CurrTriangleId + 2] = Vertices[2];\n\t} break;\n","x":7280,"y":1145,"width":613,"height":268,"color":"3"},
		{"id":"815a3e65924e42cb","type":"text","text":"Всі вершини знаходяться перед площиною - переписуємо трикутник ","x":6828,"y":1241,"width":336,"height":76,"color":"4"},
		{"id":"e630e7d99cde8fc4","type":"text","text":"\tcase 1: \n\t{\n\t\t// Adding two Triangles that are parts of previous Triangle to output\n\t\tu32 CurrTriangleId = Output->NumTriangles;\n\t\tOutput->NumTriangles += 2;\n\t\tu32 CurrVertexId = 0;\n\t\tb32 IsTriangleAdded = false;\n\n\t\tfor (u32 EdgeId = { 0 }; EdgeId < 3; ++EdgeId)\n\t\t{\n\t\t\tu32 StartVertexId = EdgeId;\n\t\t\tu32 EndVertexId = EdgeId == 2 ? 0 : (EdgeId + 1);\n\n\t\t\tclip_vertex StartVertex = Vertices[StartVertexId];\n\t\t\tclip_vertex EndVertex = Vertices[EndVertexId];\n\n\t\t\tb32 StartBehindPlane = BehindPlane[StartVertexId];\n\t\t\tb32 EndBehindPlane = BehindPlane[EndVertexId];\n\n\t\t\tif (!StartBehindPlane)\n\t\t\t{\n\t\t\t\tOutput->Vertices[3 * CurrTriangleId + CurrVertexId++] = StartVertex;\n\t\t\t}\n\n\t\t\tif (!IsTriangleAdded && CurrVertexId == 3)\n\t\t\t{\n\t\t\t\tIsTriangleAdded = true;\n\t\t\t\tCurrTriangleId += 1;\n\t\t\t\tCurrVertexId = 0;\n\n\t\t\t\tOutput->Vertices[3 * CurrTriangleId + CurrVertexId++] = Output->Vertices[3 * (CurrTriangleId - 1) + 0];\n\t\t\t\tOutput->Vertices[3 * CurrTriangleId + CurrVertexId++] = Output->Vertices[3 * (CurrTriangleId - 1) + 2];\n\t\t\t}\n\n\t\t\tif (StartBehindPlane == !EndBehindPlane)\n\t\t\t{\n\t\t\t\tOutput->Vertices[3 * CurrTriangleId + CurrVertexId++] = CalculateIntersection(StartVertex, EndVertex, Axis);\n\t\t\t}\n\n\t\t\tif (!IsTriangleAdded && CurrVertexId == 3)\n\t\t\t{\n\t\t\t\tIsTriangleAdded = true;\n\t\t\t\tCurrTriangleId += 1;\n\t\t\t\tCurrVertexId = 0;\n\n\t\t\t\tOutput->Vertices[3 * CurrTriangleId + CurrVertexId++] = Output->Vertices[3 * (CurrTriangleId - 1) + 0];\n\t\t\t\tOutput->Vertices[3 * CurrTriangleId + CurrVertexId++] = Output->Vertices[3 * (CurrTriangleId - 1) + 2];\n\t\t\t}\n\t\t}\n\t} break;","x":4880,"y":473,"width":1179,"height":1276,"color":"3"},
		{"id":"742f27ad7385edf2","type":"text","text":"Одна вершина знаходиться за площиною - Записуємо два трикуника що утворилися двома інтерпольованними точками і двума точками перед площиною","x":6120,"y":1067,"width":487,"height":88,"color":"4"},
		{"id":"aaef6ab223e4d761","type":"text","text":"\tcase 3: \n\t{\n\t\t//We're not adding a Triangle to Output\n\t} break;\n","x":6199,"y":1675,"width":482,"height":148,"color":"3"},
		{"id":"1042ac0bd8c6eae5","type":"text","text":"Всі вершини знаходяться за площиною - не пишемо нічого","x":6534,"y":1569,"width":294,"height":58,"color":"4"},
		{"id":"8af386b18549f8a6","x":5127,"y":1780,"width":686,"height":340,"color":"2","type":"text","text":"Позначимоточки вхідного трикутника як 1, 2, 3, допустимо що точка 3 знаходиться за площиною, тоді знайдена між 3 і 2 точка буде 23, а між  3 і 1 - 13. \n\nВідповідно для збереження орієнтації один з трикутників буде виглядати як 1, 2, 23, просто замінюємо точку 3 на інтерпольовану. \n\nДля другого трикутника наше ребро (23, 1) буде зберігатися але не в напрямку що було в минулому трикутнику, а навпаки: (1, 23). \nТоді додамо другу інтерпольовану точку або перед ребром або позаду і отримаємо трикутник з такою самою орієнтацією що і оригінальний: (1, 23, 13) або (13, 1, 23)\n\nКод вище робить це все з урахуванням того що в массиві точка за площиною може бути не третьою, а перщою або другою."}
	],
	"edges":[
		{"id":"2d9e71ce4483fdee","fromNode":"0cea1e2d11a311c2","fromSide":"right","toNode":"56b342d383aec806","toSide":"left"},
		{"id":"f8c625efa1a0f180","fromNode":"9936753c1775c1eb","fromSide":"right","toNode":"97eaea0add30e9c7","toSide":"left"},
		{"id":"4ff8489be51af49d","fromNode":"3890d011a60ca3cc","fromSide":"right","toNode":"712bb2ca5b7f200b","toSide":"left"},
		{"id":"4f7c9ae106294638","fromNode":"f1de0dd2ff10538e","fromSide":"right","toNode":"70327237798d60d9","toSide":"right"},
		{"id":"abd525cabf0b056d","fromNode":"f1de0dd2ff10538e","fromSide":"right","toNode":"52b90ed4624150ef","toSide":"left"},
		{"id":"8adfbc64e7cd1d77","fromNode":"b0b84f77df20218f","fromSide":"right","toNode":"c01aa9b9f6765bf7","toSide":"left"},
		{"id":"4745a731be6dd7de","fromNode":"56b342d383aec806","fromSide":"right","toNode":"b0b84f77df20218f","toSide":"left"},
		{"id":"52a3cef5704fc72f","fromNode":"b0b84f77df20218f","fromSide":"left","toNode":"9936753c1775c1eb","toSide":"left"},
		{"id":"fa11efc156572262","fromNode":"9936753c1775c1eb","fromSide":"left","toNode":"3890d011a60ca3cc","toSide":"left"},
		{"id":"af785cf0bfde6f66","fromNode":"3890d011a60ca3cc","fromSide":"left","toNode":"f1de0dd2ff10538e","toSide":"left"},
		{"id":"89e2ec32df69898a","fromNode":"69ecf039a71fa955","fromSide":"left","toNode":"0cea1e2d11a311c2","toSide":"left"},
		{"id":"899ed254bb4ab707","fromNode":"aa1d8925a5c3bdb6","fromSide":"right","toNode":"e7c4d99eb24dada4","toSide":"left"},
		{"id":"77387b191a267d53","fromNode":"024b3b50241def7c","fromSide":"right","toNode":"859605c76561f1be","toSide":"left"},
		{"id":"7558594720566e36","fromNode":"1b65d71008d5599b","fromSide":"right","toNode":"92201ae9cbbd0585","toSide":"left"},
		{"id":"bbbb7c71e6694d9e","fromNode":"92201ae9cbbd0585","fromSide":"bottom","toNode":"b826a3c266a536a4","toSide":"left"},
		{"id":"53cfa9a7ce888c41","fromNode":"b826a3c266a536a4","fromSide":"left","toNode":"04ca626f98155ca1","toSide":"left"},
		{"id":"8a7049854ace22e8","fromNode":"04ca626f98155ca1","fromSide":"left","toNode":"a51cb1025eaa0c24","toSide":"left"},
		{"id":"a296f5dbc3f98dfc","fromNode":"a51cb1025eaa0c24","fromSide":"left","toNode":"a015327c494c5522","toSide":"left"},
		{"id":"42a37914ed10673a","fromNode":"a015327c494c5522","fromSide":"left","toNode":"4fd1ac9ce82337d8","toSide":"left"},
		{"id":"ad68820706feb2ea","fromNode":"4fd1ac9ce82337d8","fromSide":"left","toNode":"ac892e4be20be94c","toSide":"left"},
		{"id":"500041646cccfb94","fromNode":"4fd1ac9ce82337d8","fromSide":"left","toNode":"050a75be5b290b97","toSide":"left"},
		{"id":"0320ff49686fcd78","fromNode":"050a75be5b290b97","fromSide":"left","toNode":"81a3b923d25c2c24","toSide":"top"},
		{"id":"3902f8a7490fdbe5","fromNode":"640a9cf1ac1a931d","fromSide":"right","toNode":"ab98ad1558da7a3c","toSide":"left"},
		{"id":"f1c24d3520a8dba7","fromNode":"15b4ed29b5ccda79","fromSide":"right","toNode":"8488d74a02b46643","toSide":"left"},
		{"id":"edd3666df7cfec27","fromNode":"1b65d71008d5599b","fromSide":"left","toNode":"640a9cf1ac1a931d","toSide":"left"},
		{"id":"cfd49c1b199f2cc5","fromNode":"640a9cf1ac1a931d","fromSide":"left","toNode":"15b4ed29b5ccda79","toSide":"left"},
		{"id":"48fd397e3deb8187","fromNode":"024b3b50241def7c","fromSide":"left","toNode":"1b65d71008d5599b","toSide":"left"},
		{"id":"2fdbf0810cfa4cc0","fromNode":"5ba9442ac1146592","fromSide":"bottom","toNode":"aa1d8925a5c3bdb6","toSide":"left"},
		{"id":"c8a79eb3fe138955","fromNode":"aa1d8925a5c3bdb6","fromSide":"left","toNode":"024b3b50241def7c","toSide":"left"},
		{"id":"6e0b7769bd06b3d0","fromNode":"1b6d235b5e43a8fb","fromSide":"right","toNode":"8f231512f5fcc9f3","toSide":"left"},
		{"id":"aff80037075f9987","fromNode":"4b2caa52f4ee0949","fromSide":"top","toNode":"0f1cb674d8dc3bb6","toSide":"left"},
		{"id":"d808267532285d98","fromNode":"0f1cb674d8dc3bb6","fromSide":"bottom","toNode":"a9d343fd757abfdc","toSide":"left"},
		{"id":"d3d2fbb97d41e83a","fromNode":"a9d343fd757abfdc","fromSide":"left","toNode":"2583db9ded04a150","toSide":"left"},
		{"id":"f31c38cd28404f0b","fromNode":"2583db9ded04a150","fromSide":"left","toNode":"cab4fd1c12353fb1","toSide":"left"},
		{"id":"0f06dc8bbeb612f7","fromNode":"cab4fd1c12353fb1","fromSide":"left","toNode":"5e9180ac1efc5eaf","toSide":"left"},
		{"id":"66026f802d40f60f","fromNode":"5e9180ac1efc5eaf","fromSide":"left","toNode":"01fbbe08bf2c1b5c","toSide":"left"},
		{"id":"41aedbc9d5fa2c1c","fromNode":"01fbbe08bf2c1b5c","fromSide":"left","toNode":"d06a4c14fc6062de","toSide":"left"},
		{"id":"a1b0933f68c4d233","fromNode":"d06a4c14fc6062de","fromSide":"left","toNode":"610e8e6fb3dff65e","toSide":"left"},
		{"id":"7f609dfaa025b810","fromNode":"610e8e6fb3dff65e","fromSide":"left","toNode":"8d7259059b5c532c","toSide":"left"},
		{"id":"8c1b4807b8cb279c","fromNode":"8d7259059b5c532c","fromSide":"left","toNode":"4a0d050f8764ee3f","toSide":"top"},
		{"id":"c80f9f3695ff8163","fromNode":"a44e5abf5c52f6c7","fromSide":"right","toNode":"4a0d050f8764ee3f","toSide":"left"},
		{"id":"551ee571e8c1c5d3","fromNode":"dbe3da508b93656e","fromSide":"right","toNode":"ebd6ed14fa87b962","toSide":"left"},
		{"id":"eefeab56bc6e916e","fromNode":"ebd6ed14fa87b962","fromSide":"bottom","toNode":"1b6d235b5e43a8fb","toSide":"left"},
		{"id":"001538e3f22640ed","fromNode":"1b6d235b5e43a8fb","fromSide":"left","toNode":"4b2caa52f4ee0949","toSide":"left"},
		{"id":"c80c9803dae1f90c","fromNode":"4b2caa52f4ee0949","fromSide":"left","toNode":"a44e5abf5c52f6c7","toSide":"left"},
		{"id":"149c7449d8d05d28","fromNode":"0288c857756810bc","fromSide":"bottom","toNode":"dbe3da508b93656e","toSide":"left"},
		{"id":"bf1c7fecb2b2cb5b","fromNode":"7371d18d355bb1af","fromSide":"right","toNode":"3a94ccf0c043ec8d","toSide":"left"},
		{"id":"70249a24e284d857","fromNode":"8e0f4fbe62ce99ec","fromSide":"right","toNode":"585d410ed665b5d6","toSide":"left"},
		{"id":"b312c7fd261516a8","fromNode":"71a69d3199d1b993","fromSide":"right","toNode":"bd1e2cb0f4b608b5","toSide":"left"},
		{"id":"10da386fe0049cb3","fromNode":"b732a504fe95056a","fromSide":"bottom","toNode":"0b4d4980fb4e6bc0","toSide":"left"},
		{"id":"4537d183c78934aa","fromNode":"0b4d4980fb4e6bc0","fromSide":"right","toNode":"f4d34de7fb451f80","toSide":"left"},
		{"id":"44813859e6fd1af8","fromNode":"f4d34de7fb451f80","fromSide":"bottom","toNode":"7371d18d355bb1af","toSide":"left"},
		{"id":"fab1acae2c9963ec","fromNode":"bcb2a2844cdef3bf","fromSide":"right","toNode":"1ac23afcbb0b9ea9","toSide":"left"},
		{"id":"c4b51d3163a0d9c9","fromNode":"bcb2a2844cdef3bf","fromSide":"bottom","toNode":"8e0f4fbe62ce99ec","toSide":"left"},
		{"id":"64bacdbb47e487e7","fromNode":"65e9803c09b2b58f","fromSide":"right","toNode":"f8a5229de9a5035e","toSide":"left"},
		{"id":"cde738473d601b15","fromNode":"8e0f4fbe62ce99ec","fromSide":"left","toNode":"65e9803c09b2b58f","toSide":"left"},
		{"id":"64dfa3ca4efb2964","fromNode":"9630d61826642138","fromSide":"right","toNode":"b45fe7adbecf409c","toSide":"left"},
		{"id":"a49ae1bfb3c7fc01","fromNode":"65e9803c09b2b58f","fromSide":"left","toNode":"9630d61826642138","toSide":"left"},
		{"id":"b6be064ef4f4f3b7","fromNode":"9630d61826642138","fromSide":"left","toNode":"71a69d3199d1b993","toSide":"left"},
		{"id":"772f105919321b16","fromNode":"71a69d3199d1b993","fromSide":"left","toNode":"815a3e65924e42cb","toSide":"left"},
		{"id":"b51a0dc4020b22d5","fromNode":"815a3e65924e42cb","fromSide":"right","toNode":"f02b6effab040adf","toSide":"left"},
		{"id":"5727f03159831cfb","fromNode":"815a3e65924e42cb","fromSide":"left","toNode":"742f27ad7385edf2","toSide":"right"},
		{"id":"04d8b804c63750c0","fromNode":"742f27ad7385edf2","fromSide":"left","toNode":"e630e7d99cde8fc4","toSide":"right"},
		{"id":"1c9ca3028fc1171c","fromNode":"742f27ad7385edf2","fromSide":"bottom","toNode":"4a34122e876b3f04","toSide":"left"},
		{"id":"eb132adf36c09ba8","fromNode":"4a34122e876b3f04","fromSide":"right","toNode":"1bd89750f5b3b831","toSide":"top"},
		{"id":"bb6adc818d0bdd36","fromNode":"4a34122e876b3f04","fromSide":"bottom","toNode":"1042ac0bd8c6eae5","toSide":"right"},
		{"id":"f48a957091676632","fromNode":"1042ac0bd8c6eae5","fromSide":"left","toNode":"aaef6ab223e4d761","toSide":"top"},
		{"id":"2d7f847896543a98","fromNode":"1042ac0bd8c6eae5","fromSide":"right","toNode":"2882cb346f7904e8","toSide":"top"},
		{"id":"cb32275268544d5e","fromNode":"2882cb346f7904e8","fromSide":"bottom","toNode":"bcecd9de209cdacc","toSide":"top"},
		{"id":"5a7a7716598dcb56","fromNode":"7789331e0909bed3","fromSide":"bottom","toNode":"5ba9442ac1146592","toSide":"left"},
		{"id":"e990548f10d6ed84","fromNode":"7789331e0909bed3","fromSide":"top","toNode":"0288c857756810bc","toSide":"top"},
		{"id":"15a8abf07f26a1a8","fromNode":"7789331e0909bed3","fromSide":"top","toNode":"b732a504fe95056a","toSide":"top"},
		{"id":"8f4641a8dd676d3a","fromNode":"e630e7d99cde8fc4","fromSide":"bottom","toNode":"8af386b18549f8a6","toSide":"top"}
	]
}