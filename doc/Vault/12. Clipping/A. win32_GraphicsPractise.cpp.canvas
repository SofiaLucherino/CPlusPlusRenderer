{
	"nodes":[
		{"id":"91901d35e74483ae","type":"text","text":"У функції DrawTriangle","x":-457,"y":-600,"width":250,"height":60,"color":"6"},
		{"id":"96ff5d1984e6e10a","type":"text","text":"\tvoid DrawTriangle(clip_vertex Vertex0, clip_vertex Vertex1, clip_vertex Vertex2\n\t\t, texture Texture, sampler Sampler)\n","x":280,"y":-485,"width":745,"height":88,"color":"3"},
		{"id":"6460c9c65c2d83f9","type":"text","text":"Змінюємо аргументи позицій точок і атриутів точок на однин аргумент для кожної точки - типу clip_vertex\nВидалвємл матрицю трансформування як аргумент (тепер наша функція приймає точки в просторі кліпу)","x":-240,"y":-500,"width":462,"height":117,"color":"4"},
		{"id":"15693114c4624c6a","type":"text","text":"Видаляємо ініціалізацію TransformedPoint0/1/2 й замінюємо її використання на Vertex0/1/2.Pos","x":280,"y":-340,"width":414,"height":58,"color":"4"},
		{"id":"b6444598c65865ca","type":"text","text":"Замінюємо використання UV координат з аргументів на координати у Vertex0/1/2.UV","x":280,"y":-260,"width":380,"height":58,"color":"4"},
		{"id":"84881dc03d723f1b","type":"text","text":"\tv2 UV = T0 * (Vertex0.UV / Vertex0.Pos.w) + T1 * (Vertex1.UV / Vertex1.Pos.w) + T2 * (Vertex2.UV / Vertex2.Pos.w);\n","x":694,"y":-260,"width":1091,"height":58,"color":"3"},
		{"id":"7acc89e0b5742ceb","type":"text","text":"Ця функція буде приймати один трикуник, відсікати його і малювати массив  трикутників що утворився після відсікання ","x":-178,"y":-166,"width":400,"height":106,"color":"4"},
		{"id":"69000752ab27611c","type":"text","text":"\tvoid DrawTriangle(v4 ModelVertex0, v4 ModelVertex1, v4 ModelVertex2\n\t\t, v2 ModelUV0, v2 ModelUV1, v2 ModelUV2\n\t\t, texture Texture, sampler Sampler)\n\t{","x":298,"y":-187,"width":647,"height":148,"color":"3"},
		{"id":"c7f1fbab3ad16a0f","type":"text","text":"Створюємо два массиви для трикутників в один одразу завнатжуємо наш трикутник","x":298,"y":-20,"width":378,"height":58,"color":"4"},
		{"id":"9732868f548f71d0","type":"text","text":"\tclip_result Ping;\n\tPing.NumTriangles = 1;\n\tPing.Vertices[0] = { ModelVertex0, ModelUV0 };\n\tPing.Vertices[1] = { ModelVertex1, ModelUV1 };\n\tPing.Vertices[2] = { ModelVertex2, ModelUV2 };\n\n\tclip_result Pong = {};\n","x":960,"y":-110,"width":474,"height":238,"color":"3"},
		{"id":"59b3e38e341fe5d9","type":"text","text":"Відсікаємо трикутник з кожною площиною поперемінно змінюючи массиви. В кінці в массиві Pong маємо усі трикутники в полі зору камери","x":297,"y":100,"width":436,"height":88,"color":"4"},
		{"id":"817389ddfecd44d8","type":"text","text":"\tClipPolygonToAxis(&Ping, &Pong, ClipAxis_Left);\n\tClipPolygonToAxis(&Pong, &Ping, ClipAxis_Right);\n\tClipPolygonToAxis(&Ping, &Pong, ClipAxis_Top);\n\tClipPolygonToAxis(&Pong, &Ping, ClipAxis_Bottom);\n\tClipPolygonToAxis(&Ping, &Pong, ClipAxis_Near);\n\tClipPolygonToAxis(&Pong, &Ping, ClipAxis_Far);\n\tClipPolygonToAxis(&Ping, &Pong, ClipAxis_W);\n","x":960,"y":143,"width":1132,"height":224,"color":"3"},
		{"id":"86c37973bd357919","type":"text","text":"\t\tfor (int TriangleId = 0; TriangleId < Pong.NumTriangles; ++TriangleId) \n\t\t{\n\t\t\tDrawTriangle(Pong.Vertices[3 * TriangleId + 0], Pong.Vertices[3 * TriangleId + 1],\n\t\t\t\tPong.Vertices[3 * TriangleId + 2], Texture, Sampler);\n\t\t}\n\t}\n","x":885,"y":394,"width":900,"height":208,"color":"3"},
		{"id":"01388863d10685f8","x":297,"y":255,"width":304,"height":58,"color":"4","type":"text","text":"Малюємо кожен трикутник з массиву відсіченних трикутників"},
		{"id":"04b6de9e7b089b06","type":"text","text":"Перевантажуємо DrawTriangle","x":-457,"y":-217,"width":250,"height":60,"color":"6"},
		{"id":"e6fc0239a8a5cf47","x":-457,"y":473,"width":250,"height":60,"color":"6","type":"text","text":"У функції main "},
		{"id":"481679b62e1283e8","x":-291,"y":542,"width":250,"height":60,"color":"6","type":"text","text":"У головному циклі"},
		{"id":"bf9c450c2670e72e","x":-122,"y":602,"width":250,"height":60,"color":"6","type":"text","text":"Після створення матриці трансформації"},
		{"id":"a7b21ae7fe6b23b1","x":45,"y":693,"width":344,"height":58,"color":"4","type":"text","text":"Творимо массив усіх точок трансформованних до простору кліпу"},
		{"id":"adb849009a08717a","x":45,"y":922,"width":375,"height":88,"color":"4","type":"text","text":"За допомогою массиву індексів творимо трикутники і відмальовуємо їх (відповідно попередній код малювання видаляємо)"},
		{"id":"0a1b4e5acda2f63c","x":45,"y":1124,"width":318,"height":58,"color":"4","type":"text","text":"Звільнюємо пам'ять виділену для массива трансформованних точок"},
		{"id":"499e101cac945773","x":444,"y":633,"width":818,"height":178,"color":"3","type":"text","text":"\tv4* TransformedVertices = (v4*)malloc(sizeof(v4) * ArrayCount(ModelVertices));\n\tfor (u32 VertexId = { 0 }; VertexId < ArrayCount(ModelVertices); ++VertexId) \n\t{\n\t\tTransformedVertices[VertexId] = (Transform * V4(ModelVertices[VertexId], 1.0f));\n\t}"},
		{"id":"be48b6959e9b897f","type":"text","text":"\n\tfor (u32 IndexId = { 0 }; IndexId < ArrayCount(ModelIndices); IndexId += 3)\n\t{\n\t\tu32 Index0 = ModelIndices[IndexId + 0];\n\t\tu32 Index1 = ModelIndices[IndexId + 1];\n\t\tu32 Index2 = ModelIndices[IndexId + 2];\n\n\t\tDrawTriangle(TransformedVertices[Index0], TransformedVertices[Index1], TransformedVertices[Index2]\n\t\t\t, ModelUVs[Index0], ModelUVs[Index1], ModelUVs[Index2]\n\t\t\t, CheckerBoardTexture, Sampler);\n\t}\n","x":463,"y":808,"width":1032,"height":316,"color":"3"},
		{"id":"449f1e30d7f58726","x":444,"y":1124,"width":310,"height":58,"color":"3","type":"text","text":"\tfree(TransformedVertices);"}
	],
	"edges":[
		{"id":"4e8b7a7edeee579e","fromNode":"6460c9c65c2d83f9","fromSide":"right","toNode":"96ff5d1984e6e10a","toSide":"left"},
		{"id":"1d625ed666f7e3be","fromNode":"91901d35e74483ae","fromSide":"bottom","toNode":"6460c9c65c2d83f9","toSide":"left"},
		{"id":"02952c4cc8eb4ad7","fromNode":"96ff5d1984e6e10a","fromSide":"left","toNode":"15693114c4624c6a","toSide":"left"},
		{"id":"141958979c585afa","fromNode":"b6444598c65865ca","fromSide":"right","toNode":"84881dc03d723f1b","toSide":"left"},
		{"id":"056b2e34cfe3103a","fromNode":"15693114c4624c6a","fromSide":"left","toNode":"b6444598c65865ca","toSide":"left"},
		{"id":"cbd90f6dba53d65d","fromNode":"7acc89e0b5742ceb","fromSide":"right","toNode":"69000752ab27611c","toSide":"left"},
		{"id":"caa4db6ebcac498b","fromNode":"69000752ab27611c","fromSide":"left","toNode":"c7f1fbab3ad16a0f","toSide":"left"},
		{"id":"eaf6572164dcf5b3","fromNode":"c7f1fbab3ad16a0f","fromSide":"right","toNode":"9732868f548f71d0","toSide":"left"},
		{"id":"0f142e9928692d1c","fromNode":"c7f1fbab3ad16a0f","fromSide":"left","toNode":"59b3e38e341fe5d9","toSide":"left"},
		{"id":"2a0c1337102c3f21","fromNode":"59b3e38e341fe5d9","fromSide":"right","toNode":"817389ddfecd44d8","toSide":"left"},
		{"id":"9aabf63879290f3a","fromNode":"01388863d10685f8","fromSide":"bottom","toNode":"86c37973bd357919","toSide":"left"},
		{"id":"eb67b3829f17b06e","fromNode":"59b3e38e341fe5d9","fromSide":"left","toNode":"01388863d10685f8","toSide":"left"},
		{"id":"0667f82af5514b61","fromNode":"e6fc0239a8a5cf47","fromSide":"bottom","toNode":"481679b62e1283e8","toSide":"left"},
		{"id":"89986a1f11c9dabc","fromNode":"481679b62e1283e8","fromSide":"bottom","toNode":"bf9c450c2670e72e","toSide":"left"},
		{"id":"ab72215103cda7c0","fromNode":"bf9c450c2670e72e","fromSide":"bottom","toNode":"a7b21ae7fe6b23b1","toSide":"left"},
		{"id":"727d491867f7ac49","fromNode":"0a1b4e5acda2f63c","fromSide":"right","toNode":"449f1e30d7f58726","toSide":"left"},
		{"id":"ee146bb0283cd26e","fromNode":"adb849009a08717a","fromSide":"right","toNode":"be48b6959e9b897f","toSide":"left"},
		{"id":"8d2258ae7ac98e0e","fromNode":"a7b21ae7fe6b23b1","fromSide":"right","toNode":"499e101cac945773","toSide":"left"},
		{"id":"621fc7cd3be0d29f","fromNode":"a7b21ae7fe6b23b1","fromSide":"left","toNode":"adb849009a08717a","toSide":"left"},
		{"id":"ca69f714b9af9d25","fromNode":"adb849009a08717a","fromSide":"left","toNode":"0a1b4e5acda2f63c","toSide":"left"},
		{"id":"c2942db0087c85df","fromNode":"04b6de9e7b089b06","fromSide":"bottom","toNode":"7acc89e0b5742ceb","toSide":"left"}
	]
}