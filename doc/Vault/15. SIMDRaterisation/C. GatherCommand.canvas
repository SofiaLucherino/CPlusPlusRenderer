{
	"nodes":[
		{"id":"1aaf7bd6f1a21903","type":"text","text":"Додамо опператор менше для цілочисленних SIMD чисел","x":-1586,"y":-2709,"width":290,"height":58,"color":"4"},
		{"id":"494f249720db20b0","type":"text","text":"У graphicsMath.cpp","x":-1496,"y":-2442,"width":250,"height":60,"color":"1"},
		{"id":"83e231da2b03920e","type":"text","text":"Додамо конструктор для двовимірних векторів з SIMD числами з плаваючою комою","x":-1273,"y":-2709,"width":407,"height":58,"color":"4"},
		{"id":"9e6b6694ac1d2350","type":"text","text":"\tf32_x4 operator/(f32_x4 A, f32_x4 B)\n\t{\n\t\tf32_x4 Result = {};\n\t\tResult.Vals = _mm_div_ps(A.Vals, B.Vals);\n\n\t\treturn Result;\n\t}","x":-674,"y":-2411,"width":498,"height":238,"color":"3"},
		{"id":"b3db9dfe58d37d7f","type":"text","text":"\tf32_x4 operator/(f32_x4 A, f32 B)\n\t{\n\t\tf32_x4 Result = {};\n\t\tResult = A / F32X4(B);\n\n\t\treturn Result;\n\t}","x":-674,"y":-2173,"width":367,"height":238,"color":"3"},
		{"id":"12c1cfab1fd29bdb","type":"text","text":"\tf32_x4 operator/=(f32_x4& A, f32_x4& B)\n\t{\n\t\tA = A / B;\n\t\treturn A;\n\t}","x":-674,"y":-1935,"width":416,"height":178,"color":"3"},
		{"id":"f8fd9b59babe5399","type":"text","text":"\tv2_x4 operator/=(v2_x4& A, f32_x4 B)\n\t{\n\t\tA.x /= B;\n\t\tA.y /= B;\n\t\treturn A;\n\t}","x":-674,"y":-1757,"width":392,"height":208,"color":"3"},
		{"id":"edceca2e76b5c8b3","type":"text","text":"Оператори ділення","x":-1166,"y":-2277,"width":250,"height":60,"color":"4"},
		{"id":"d533082bb105c5f5","type":"text","text":"Оператор додавання двовимірних векторів з SIMD числами з плаваючою комою","x":-852,"y":-2709,"width":386,"height":58,"color":"4"},
		{"id":"b7b80c227f6d3a67","type":"text","text":"Оператор множення чисел з плаваючою точкою і двовимірних векторів з SIMD числами з плаваючою комою","x":-442,"y":-2709,"width":368,"height":88,"color":"4"},
		{"id":"e321b11231bb1f19","type":"text","text":"\tv2_x4 V2X4(v2 A)\n\t{\n\t\tv2_x4 Result = {};\n\t\tResult.x = F32X4(A.x);\n\t\tResult.y = F32X4(A.y);\n\n\t\treturn Result;\n\t}","x":-1466,"y":-3094,"width":343,"height":268,"color":"3"},
		{"id":"9633be4df4d7973a","type":"text","text":"\tv2_x4 operator+(v2_x4 A, v2_x4 B)\n\t{\n\t\tv2_x4 Result = {};\n\t\tResult.x = A.x + B.x;\n\t\tResult.y = A.y + B.y;\n\n\t\treturn Result;\n\t}","x":-1123,"y":-3094,"width":367,"height":267,"color":"3"},
		{"id":"810ce1b66fa3c7ea","type":"text","text":"\tv2_x4 operator*(f32 A, v2_x4 B)\n\t{\n\t\tv2_x4 Result = {};\n\t\tResult.x = B.x * A;\n\t\tResult.y = B.y * A;\n\n\t\treturn Result;\n\t}","x":-756,"y":-3095,"width":351,"height":268,"color":"3"},
		{"id":"eabca5ae56be62a9","type":"text","text":"\tv2_x4 operator*(f32_x4 A, v2_x4 B)\n\t{\n\t\tv2_x4 Result = {};\n\t\tResult.x = B.x * A;\n\t\tResult.y = B.y * A;\n\n\t\treturn Result;\n\t}","x":-405,"y":-3095,"width":375,"height":268,"color":"3"},
		{"id":"49ed36c188ba89fd","type":"text","text":"\ti32_x4 I32X4(f32 X)\n\t{\n\t\ti32_x4 Result = {};\n\t\tResult.Vals = _mm_cvtps_epi32(_mm_set1_ps(X));\n\n\t\treturn Result;\n\t}","x":-2611,"y":-2054,"width":539,"height":237,"color":"3"},
		{"id":"ee07b13a61b4d7da","type":"text","text":"\ti32_x4 I32X4(f32_x4 X)\n\t{\n\t\ti32_x4 Result = {};\n\t\tResult.Vals = _mm_cvtps_epi32(X.Vals);\n\t\n\t\treturn Result;\n\t}","x":-2546,"y":-2292,"width":474,"height":238,"color":"3"},
		{"id":"25711c6e788ea6d9","type":"text","text":"Додамо конструктор цілочислених SIMD чисел із чисел з плаваючою точкою","x":-2018,"y":-2217,"width":315,"height":88,"color":"4"},
		{"id":"9e624eb9505672d4","type":"text","text":"\ti32_x4 Min(i32_x4 A, i32_x4 B) \n\t{\n\t\ti32_x4 Result = {};\n\t\tResult.Vals = _mm_min_epi32(A.Vals, B.Vals);\n\t\treturn Result;\n\t}","x":-2595,"y":-1583,"width":523,"height":207,"color":"3"},
		{"id":"ef5ac9eb9027deb2","type":"text","text":"\ti32_x4 Max(i32_x4 A, i32_x4 B)\n\t{\n\t\ti32_x4 Result = {};\n\t\tResult.Vals = _mm_max_epi32(A.Vals, B.Vals);\n\t\treturn Result;\n\t}","x":-2595,"y":-1790,"width":523,"height":207,"color":"3"},
		{"id":"dbf7b6f7205b9815","type":"text","text":"Додамо функції що повертають максимальні і мінімальні значення в цілочисленних SIMD числах","x":-1994,"y":-1715,"width":437,"height":58,"color":"4"},
		{"id":"3706bda91331bda7","type":"text","text":"\ti32_x4 I32X4Gather(i32* Ptr, i32_x4 Offsets)\n\t{\n\t\ti32_x4 Result = I32X4(Ptr[Offsets.e[0]], Ptr[Offsets.e[1]], Ptr[Offsets.e[2]], Ptr[Offsets.e[3]]);\n\t\treturn Result;\n\t}","x":-3038,"y":-2501,"width":966,"height":178,"color":"3"},
		{"id":"b84d820fa89115b8","type":"text","text":"\tf32_x4 Floor(f32_x4 A)\n\t{\n\t\tf32_x4 Result = {};\n\t\tResult.Vals = _mm_floor_ps(A.Vals);\n\n\t\treturn Result;\n\t}","x":-2521,"y":-2770,"width":449,"height":238,"color":"3"},
		{"id":"9740ef1a891894ba","type":"text","text":"\ti32_x4 operator<(i32_x4 A, i32_x4 B)\n\t{\n\t\ti32_x4 Result = {};\n\t\tResult.Vals = _mm_cmplt_epi32(A.Vals, B.Vals);\n\t\treturn Result;\n\t}\n\n\ti32_x4 operator<(i32_x4 A, i32 B)\n\t{\n\t\ti32_x4 Result = A < I32X4(B);\n\n\t\treturn Result;\n\t}","x":-2065,"y":-3210,"width":539,"height":388,"color":"3"},
		{"id":"bc06ee8f2df4a633","type":"text","text":"Створимо функцію округлення для SIMD чисел з плаваючою точкою","x":-2026,"y":-2561,"width":323,"height":58,"color":"4"},
		{"id":"0995444a478bf141","type":"text","text":"Створимо функцію що буде приймати значення вказівника SIMD число зі зміщеннями по цьому вказівнику і віддавати SIMD число зі значеннями в цих зміщеннях","x":-2026,"y":-2456,"width":500,"height":88,"color":"4"},
		{"id":"d9248ea2a4d3593e","type":"text","text":"У функції void DrawTriangle(clip_vertex Vertex0, clip_vertex Vertex1, clip_vertex Vertex2, texture Texture, sampler Sampler)\n","x":-2543,"y":-1151,"width":499,"height":58,"color":"6"},
		{"id":"00d629b476244599","type":"text","text":"У win32_GraphicsPractise.cpp","x":-2811,"y":-1300,"width":268,"height":59,"color":"1"},
		{"id":"473e60d7e6f836b6","type":"text","text":"Піся обчислення глибини","x":-2211,"y":-1043,"width":187,"height":60,"color":"6"},
		{"id":"5df4edc2c652f1f9","type":"text","text":"Рахуємо знамменик для uv координат","x":-2117,"y":-939,"width":250,"height":60,"color":"4"},
		{"id":"45cbcaff81a15886","type":"text","text":"\tf32_x4 OneOverW = T0 * Vertex0.Pos.w + T1 * Vertex1.Pos.w + T2 * Vertex2.Pos.w;\n","x":-1804,"y":-938,"width":745,"height":58,"color":"3"},
		{"id":"8fcc6862e588c896","type":"text","text":"Рахуємо uv координати","x":-2117,"y":-834,"width":250,"height":60,"color":"4"},
		{"id":"97248420e985db14","type":"text","text":"\tv2_x4 UV = T0 * V2X4(Vertex0.UV) + T1 * V2X4(Vertex1.UV) + T2 * V2X4(Vertex2.UV);\n\tUV /= OneOverW;\n","x":-1782,"y":-848,"width":762,"height":88,"color":"3"},
		{"id":"5978798d606553df","type":"text","text":"Ініціалізуємо змінну кольору з текстури","x":-2117,"y":-722,"width":250,"height":60,"color":"4"},
		{"id":"9a4372317eb0cfed","type":"text","text":"\ti32_x4 TextureColor = I32X4(0);\n","x":-1783,"y":-722,"width":351,"height":58,"color":"3"},
		{"id":"e1b9e3a1ce8bb9a9","type":"text","text":"Пишемо семплер для методу найближчого сусіда","x":-2117,"y":-606,"width":268,"height":60,"color":"4"},
		{"id":"35d0527a594db399","type":"text","text":"\tswitch (Sampler.Type)\n\t{\n\t\tcase(SamplerType_Nearest):\n\t\t{","x":-1783,"y":-650,"width":375,"height":148,"color":"3"},
		{"id":"8dbba0abb4e7bb2b","type":"text","text":"Рахуємо координати текселів, і на випадок якщо вони знаходяться поза текстурою приводимо їх до неї щоб виключити можливість помилок (усе одно їхня маска буде давати 0 і їх значення не запишеться)","x":-1558,"y":-443,"width":594,"height":88,"color":"4"},
		{"id":"74d09458dc037e40","type":"text","text":"\ti32_x4 TexelX = I32X4(Floor(UV.x * (Texture.Width - 1)));\n\ti32_x4 TexelY = I32X4(Floor(UV.y * (Texture.Height - 1)));\n\t\t\t\n\tTexelX = Max(Min(TexelX, I32X4(Texture.Width - 1)), I32X4(0));\n\tTexelY = Max(Min(TexelY, I32X4(Texture.Height - 1)), I32X4(0));\n","x":-903,"y":-488,"width":613,"height":178,"color":"3"},
		{"id":"a368c1f3a4715a39","type":"text","text":"\ti32_x4 TexelMask = (TexelX >= 0 & TexelX < Texture.Width\n\t\t& TexelY >= 0 & TexelY < Texture.Height);\n","x":-1261,"y":-294,"width":556,"height":88,"color":"3"},
		{"id":"36ed3d56b711b939","type":"text","text":"Рахуємо маску для текселів","x":-1558,"y":-280,"width":250,"height":60,"color":"4"},
		{"id":"7b72085275ecb8ee","type":"text","text":"Рахуємо зміщення у буффері текстури і переписуємо значення зі зміщень у TrueCase","x":-1558,"y":-160,"width":395,"height":58,"color":"4"},
		{"id":"8bc56573f4066f0e","type":"text","text":"\ti32_x4 TexelOffsets = TexelY * I32X4(Texture.Width) + TexelX;\n\n\ti32_x4 TrueCase = I32X4Gather((i32*)Texture.Texels, TexelOffsets);\n\ti32_x4 FalseCase = I32X4((i32)0xffff00ff);\n","x":-1116,"y":-205,"width":638,"height":148,"color":"3"},
		{"id":"fddce592e54440be","type":"text","text":"Записуємо кольори з текстур використовуючи маску і отриманні з буфферу значення","x":-1558,"y":0,"width":408,"height":58,"color":"4"},
		{"id":"e2816a23937175c3","type":"text","text":"\t\tTextureColor = (TexelMask & TrueCase) + AndNot(TexelMask, FalseCase);\n\t} break;\n","x":-1116,"y":-15,"width":728,"height":88,"color":"3"},
		{"id":"45827319646a112b","type":"text","text":"\tv2i_x4 V2IX4(i32_x4 A, i32_x4 B)\n\t{\n\t\tv2i_x4 Result = {};\n\t\tResult.x = A;\n\t\tResult.y = B;\n\n\t\treturn Result;\n\t}","x":16,"y":-3095,"width":359,"height":268,"color":"3"},
		{"id":"86ab922c6c314b40","type":"text","text":"\tv2i_x4 V2IX4(f32_x4 A, f32_x4 B)\n\t{\n\t\tv2i_x4 Result = {};\n\t\tResult.x = I32X4(A);\n\t\tResult.y = I32X4(B);\n\n\t\treturn Result;\n\t}","x":701,"y":-3095,"width":359,"height":267,"color":"3"},
		{"id":"ca05707f8327b9f7","type":"text","text":"\tv2i_x4 V2IX4(i32 A, i32 B)\n\t{\n\t\tv2i_x4 Result = {};\n\t\tResult.x = I32X4(A);\n\t\tResult.y = I32X4(B);\n\n\t\treturn Result;\n\t}","x":375,"y":-3095,"width":326,"height":268,"color":"3"},
		{"id":"c6cfdcbf91501546","type":"text","text":"\tv2_x4 V2X4(i32 A, i32 B)\n\t{\n\t\tv2_x4 Result = {};\n\t\tResult.x = F32X4(I32X4(A));\n\t\tResult.y = F32X4(I32X4(B));\n\n\t\treturn Result;\n\t}\n\n\tv2_x4 V2X4(f32 A, f32 B)\n\t{\n\t\tv2_x4 Result = {};\n\t\tResult.x = F32X4(A);\n\t\tResult.y = F32X4(B);\n\n\t\treturn Result;\n\t}","x":992,"y":-2776,"width":384,"height":484,"color":"3"},
		{"id":"288a511ef5cfbb78","type":"text","text":"Оператори додавання і ділення","x":-1533,"y":-1717,"width":250,"height":60,"color":"4"},
		{"id":"8fafcf91b3356123","type":"text","text":"Оператори додавання і ділення","x":-134,"y":-2476,"width":250,"height":60,"color":"4"},
		{"id":"0bb6c1a315ed5d7f","type":"text","text":"\tv3_x4 operator+(v3_x4 A, v3_x4 B)\n\t{\n\t\tv3_x4 Result = {};\n\t\tResult.x = B.x + A.x;\n\t\tResult.y = B.y + A.y;\n\t\tResult.z = B.z + A.z;\n\t\n\t\treturn Result;\n\t}","x":-134,"y":-2319,"width":367,"height":292,"color":"3"},
		{"id":"8c7b4e8282cad153","type":"text","text":"\tv3_x4 operator*(f32_x4 A, v3_x4 B) \n\t{\n\t\tv3_x4 Result = {};\n\t\tResult.x = B.x * A;\n\t\tResult.y = B.y * A;\n\t\tResult.z = B.z * A;\n\n\t\treturn Result;\n\t}","x":242,"y":-2319,"width":375,"height":292,"color":"3"},
		{"id":"33ebd7866f99e1a2","type":"text","text":"\tv3_x4 Lerp(v3_x4 A, v3_x4 B, f32_x4 T)\n\t{\n\t\tv3_x4 Result = (F32X4(1.0f) - T) * A + T * B;\n\t\treturn Result;\n\t}","x":-1306,"y":-1992,"width":531,"height":178,"color":"3"},
		{"id":"de59723c21ccf7bb","type":"text","text":"Функцію Lerp для SIMD векторів","x":-1306,"y":-2114,"width":250,"height":60,"color":"4"},
		{"id":"c288a3885afff94a","type":"text","text":"\ti32_x4 operator<<(i32_x4 A, i32 B) \n\t{\n\t\ti32_x4 Result = {};\n\t\tResult.Vals = _mm_sll_epi32(A.Vals, _mm_set_epi32(0, 0, 0, B));\n\n\t\treturn Result;\n\t}\n\n\ti32_x4 operator>>(i32_x4 A, i32 B)\n\t{\n\t\ti32_x4 Result = {};\n\t\tResult.Vals = _mm_srl_epi32(A.Vals, _mm_set_epi32(0, 0, 0, B));\n\n\t\treturn Result;\n\t}","x":617,"y":-2292,"width":679,"height":436,"color":"3"},
		{"id":"31ef203fe4cb3850","type":"text","text":"Додамо необхідні конструктори для SIMD векторів","x":-134,"y":-2592,"width":301,"height":58,"color":"4"},
		{"id":"d1e9a2d5d0f48c4c","type":"text","text":"Оператори зміщення бітів числа","x":-134,"y":-2534,"width":250,"height":60,"color":"4"},
		{"id":"e11d6c824fff0f7a","type":"text","text":"\tv3_x4 operator/=(v3_x4& A, f32_x4 B)\n\t{\n\t\tA.x = A.x / B;\n\t\tA.y = A.y / B;\n\t\tA.z = A.z / B;\n\t\treturn A;\n\t}","x":-882,"y":-1538,"width":392,"height":238,"color":"3"},
		{"id":"148e545a4cb693b4","type":"text","text":"\tv2_x4 operator*(v2_x4 A, v2_x4 B)\n\t{\n\t\tv2_x4 Result = {};\n\t\tResult.x = B.x * A.x;\n\t\tResult.y = B.y * A.y;\n\n\t\treturn Result;\n\t}","x":-2005,"y":-1538,"width":367,"height":268,"color":"3"},
		{"id":"dc2e808920caefa8","type":"text","text":"\tv2i_x4 operator+(v2i_x4 A, v2i_x4 B)\n\t{\n\t\tv2i_x4 Result = {};\n\t\tResult.x = A.x + B.x;\n\t\tResult.y = A.y + B.y;\n\n\t\treturn Result;\n\t}","x":-1638,"y":-1538,"width":392,"height":268,"color":"3"},
		{"id":"e56ddd2f002f15a1","type":"text","text":"\tv2_x4 operator-(v2_x4 A, v2_x4 B)\n\t{\n\t\tv2_x4 Result = {};\n\t\tResult.x = A.x - B.x;\n\t\tResult.y = A.y - B.y;\n\t\treturn Result;\n\t}","x":-1246,"y":-1538,"width":367,"height":238,"color":"3"},
		{"id":"4f9cd7064450b3b6","type":"text","text":"\tstruct texture\n\t{\n\t    i32 Width;\n\t    i32 Height;\n\t    u32* Texels;\n\t};","x":375,"y":-1832,"width":228,"height":208,"color":"3"},
		{"id":"1aae8c12f9092dec","type":"text","text":"Змінимо структуру текстури так щоб її значення Висоти і ширини мали тип i32 ","x":-18,"y":-1757,"width":357,"height":58,"color":"4"},
		{"id":"b9f2c2b0a9a1d137","type":"text","text":"У win32_GraphicsPractise.h","x":-185,"y":-1862,"width":250,"height":60,"color":"1"},
		{"id":"1a97c98aa05ab750","type":"text","text":"Переміними структури f32_x4 і i32_x4 на унії, які ми можемо інтерпретувати як массиви з 4 значеннями","x":-95,"y":-1209,"width":445,"height":58,"color":"4"},
		{"id":"c3da7081baadde0d","type":"text","text":"\tunion v3_x4\n\t{\n\t\tstruct\n\t\t{\n\t\t\tf32_x4 x, y, z;\n\t\t};\n\n\t\tstruct\n\t\t{\n\t\t\tf32_x4 r, g, b;\n\t\t};\n\n\t\tstruct\n\t\t{\n\t\t\tv2_x4 xy;\n\t\t\tf32_x4 Ignored0;\n\t\t};\n\n\t\tstruct\n\t\t{\n\t\t\tf32_x4 Ignored1;\n\t\t\tv2_x4 yz;\n\t\t};\n\n\t\tf32_x4 e[3];\n\t};","x":615,"y":-1209,"width":359,"height":700,"color":"3"},
		{"id":"93edb38fa4b350d4","type":"text","text":"\tunion i32_x4\n\t{\n\t\tstruct \n\t\t{\n\t\t\t__m128i Vals;\n\t\t};\n\t\n\t\ti32 e[4];\n\t};","x":-262,"y":-915,"width":334,"height":292,"color":"3"},
		{"id":"818ed6261e308c4f","type":"text","text":"\tunion f32_x4 \n\t{\n\t\tstruct \n\t\t{\n\t\t\t__m128 Vals;\n\t\t};\n\n\t\tf32 e[4];\n\t};","x":178,"y":-915,"width":326,"height":292,"color":"3"},
		{"id":"b2234f84a506fcf4","type":"text","text":"\tunion v2i_x4\n\t{\n\t\tstruct\n\t\t{\n\t\t\ti32_x4 x, y;\n\t\t};\n\n\t\ti32_x4 e[2];\n\t};","x":631,"y":-1532,"width":326,"height":292,"color":"3"},
		{"id":"aaa1e7fc8211faa4","type":"text","text":"У graphicsMath.h","x":-279,"y":-1517,"width":250,"height":60,"color":"1"},
		{"id":"5bdca359c005db93","type":"text","text":"Створимо юнію для двовимірних векторів SIMD змінних","x":-40,"y":-1400,"width":381,"height":58,"color":"4"},
		{"id":"fe22a3cfa156c312","type":"text","text":"Створимо юнію для трьохвимірних векторів SIMD змінних з плаваючою комою","x":-40,"y":-1298,"width":390,"height":58,"color":"4"},
		{"id":"4288b984aad60e75","type":"text","text":"\tunion v2_x4\n\t{\n\t\tstruct\n\t\t{\n\t\t\tf32_x4 x, y;\n\t\t};\n\n\t\tf32_x4 e[2];\n\t};","x":631,"y":-1824,"width":326,"height":292,"color":"3"},
		{"id":"cde9a29a8c9af451","type":"text","text":"Додамо функції для конвертації кольорів з формату від 0 до 255 у формат від 0 до 1 для SIMD чисел","x":-3220,"y":-1180,"width":448,"height":58,"color":"4"},
		{"id":"0c23bfeaec2691ab","type":"text","text":"\ti32_x4 ColorRGBToI32X4(v3_x4 Color)\n\t{\n\t\ti32_x4 Result = {};\n\t\tResult = (I32X4(0xFF) << 24) | ((I32X4(Color.r * 255)) << 16) | ((I32X4(Color.g * 255)) << 8) | (I32X4(Color.b * 255));\n\n\t\treturn Result;\n\t}","x":-3860,"y":-1614,"width":1139,"height":238,"color":"3"},
		{"id":"d7991c06b195e6f8","type":"text","text":"\tv3_x4 ColorI32X4ToRGB(i32_x4 Color)\n\t{\n\t\tv3_x4 Result = {};\n\t\tResult.r = F32X4((Color >> 16) & I32X4(0xFF));\n\t\tResult.g = F32X4((Color >> 8) & I32X4(0xFF));\n\t\tResult.b = F32X4((Color) & I32X4(0xFF));\n\t\tResult /= F32X4(255.0f);\n\t\treturn Result;\n\t}","x":-4000,"y":-1326,"width":539,"height":292,"color":"3"},
		{"id":"2617559357df7635","type":"text","text":"Після обчислення маски ребер","x":-2679,"y":-1043,"width":250,"height":60,"color":"6"},
		{"id":"3891de91b44452f7","type":"text","text":"Перевіряємо чи хоча б одна з точок знаходиться у трикутнику, і якщо ні то просто перейдемо до наступної точки","x":-3068,"y":-1057,"width":347,"height":88,"color":"4"},
		{"id":"5dd7342e64c9b894","type":"text","text":"\tif (_mm_movemask_epi8(EdgeMask.Vals)) \n\t{\n\t\t...\n\t}","x":-3523,"y":-1086,"width":400,"height":147,"color":"3"},
		{"id":"718e9c51b91b97e6","type":"text","text":"Змінюємо білий колір на отриманий в ході семплінгу колір текстури","x":-3457,"y":-832,"width":334,"height":58,"color":"4"},
		{"id":"114578ee7f0e8e87","type":"text","text":"\ti32_x4 OutputColors = (TextureColor & FinalMaskI32) + AndNot(FinalMaskI32, PixelColors);\n","x":-3057,"y":-832,"width":818,"height":58,"color":"3"},
		{"id":"283bb8138671fdec","type":"text","text":"Після семплерів","x":-2964,"y":-938,"width":250,"height":60,"color":"6"},
		{"id":"33f230e49a85503c","type":"text","text":"\tcase(SamplerType_Bilinear):\n\t{","x":-1783,"y":73,"width":318,"height":88,"color":"3"},
		{"id":"03ed48531405fee3","type":"text","text":"Пишемо семплер для методу інтерполяції","x":-2117,"y":87,"width":250,"height":60,"color":"4"},
		{"id":"5159bb8ced2bedbc","type":"text","text":"\tv2_x4 TexelV2 = UV * V2X4(Texture.Width, Texture.Height) - V2X4(0.5f, 0.5f);\n\tv2i_x4 TexelPos[4] = {};\n\tTexelPos[0] = V2IX4(Floor(TexelV2.x), Floor(TexelV2.y));\n\tTexelPos[1] = TexelPos[0] + V2IX4(1, 0);\n\tTexelPos[2] = TexelPos[0] + V2IX4(0, 1);\n\tTexelPos[3] = TexelPos[0] + V2IX4(1, 1);\n","x":-1108,"y":117,"width":720,"height":208,"color":"3"},
		{"id":"11030826cf91a06c","type":"text","text":"Рахуємо uv координати і записуємо 4 текселі між якими вони знаходяться","x":-1522,"y":192,"width":353,"height":58,"color":"4"},
		{"id":"49ee7915c93b1087","type":"text","text":"\tv3_x4 TexelColors[4] = {};\n\n\tfor (u32 TexelID = { 0 }; TexelID < ArrayCount(TexelPos); TexelID++)\n\t{\n","x":-1108,"y":350,"width":654,"height":148,"color":"3"},
		{"id":"721385c174017fc0","type":"text","text":"Створюємо змінну де зберігатимемо кольори і входимо у цикл де переходимо кожних текселів","x":-1522,"y":369,"width":338,"height":110,"color":"4"},
		{"id":"c5b75433255c43d5","type":"text","text":"\tv2i_x4 CurrTexelPos = TexelPos[TexelID];\n\ti32_x4 TexelMask = (CurrTexelPos.x >= 0 & CurrTexelPos.x < Texture.Width\n\t\t& CurrTexelPos.y >= 0 & CurrTexelPos.y < Texture.Height);\n","x":-1108,"y":520,"width":687,"height":118,"color":"3"},
		{"id":"9f5ebab3e63a1e4a","type":"text","text":"Рахуємо маску для поточних текселів","x":-1522,"y":549,"width":201,"height":60,"color":"4"},
		{"id":"ca00ad606e568134","type":"text","text":"Приводимо поточні текселі до меж текстури, щоб не виникало багів","x":-1522,"y":700,"width":326,"height":58,"color":"4"},
		{"id":"9da37800515fba0d","type":"text","text":"\tCurrTexelPos.x = Max(Min(CurrTexelPos.x, I32X4(Texture.Width - 1)), I32X4(0));\n\tCurrTexelPos.y = Max(Min(CurrTexelPos.y, I32X4(Texture.Height - 1)), I32X4(0));\n","x":-1108,"y":685,"width":745,"height":88,"color":"3"},
		{"id":"c2dfc0c36a9ec46c","type":"text","text":"Рахуємо колір поточних текселів, у випадку якщо тексель не знаходиться у текстурі ми йому даємо колір оббивки","x":-1522,"y":820,"width":488,"height":58,"color":"4"},
		{"id":"8cdb9c49e4c009e2","type":"text","text":"\ti32_x4 TexelOffsets = CurrTexelPos.y * I32X4(Texture.Width) + CurrTexelPos.x;\n\ti32_x4 TrueCase = I32X4Gather((i32*)Texture.Texels, TexelOffsets);\n\ti32_x4 FalseCase = I32X4((i32)Sampler.BoarderColor);\n\ti32_x4 TexelColorsI32 = (TexelMask & TrueCase) + AndNot(TexelMask, FalseCase);\n","x":-980,"y":775,"width":736,"height":148,"color":"3"},
		{"id":"0a9c29be2e11ec9d","type":"text","text":"Призначаємо колір до массиву кольорів і виходимо з циклу","x":-1522,"y":960,"width":294,"height":58,"color":"4"},
		{"id":"849f4c1d81048bc3","type":"text","text":"\t\tTexelColors[TexelID] = ColorI32X4ToRGB(TexelColorsI32);\n\t}","x":-1108,"y":945,"width":613,"height":88,"color":"3"},
		{"id":"576ff9951f4fdc64","type":"text","text":"\tf32_x4 S = TexelV2.x - Floor(TexelV2.x);\n\tf32_x4 K = TexelV2.y - Floor(TexelV2.y);\n\n\tv3_x4 Interpolated0 = Lerp(TexelColors[0], TexelColors[1], S);\n\tv3_x4 Interpolated1 = Lerp(TexelColors[2], TexelColors[3], S);\n\tv3_x4 FinalColor = Lerp(Interpolated0, Interpolated1, K);\n","x":-1108,"y":1080,"width":605,"height":208,"color":"3"},
		{"id":"c26d6c89fdb20f64","type":"text","text":"Рахуємо коефіціенти і виконуємо інтерполяцію між 4 текселями текстури","x":-1522,"y":1155,"width":356,"height":58,"color":"4"},
		{"id":"2903c6a74f871d81","type":"text","text":"\t\t\tTextureColor = ColorRGBToI32X4(FinalColor);\n\t\t} break;\n\t\tdefault:\n\t\t{\n\t\t\tInvalidCodePath;\n\t\t} break;\n\t}","x":-1108,"y":1320,"width":580,"height":238,"color":"3"},
		{"id":"f839e7c1b4bc3610","type":"text","text":"Записуємо отриманний інтерполяцією колір у вихідний колір текстури і закінчуємо алгоритм другого і останньго семплера","x":-1522,"y":1395,"width":390,"height":88,"color":"4"},
		{"id":"4e09426ca9b11026","type":"text","text":"SIMD Семплінг текстур\n- Основа проблема при семплінгу є те що для послідовних пікселів текселі можуть йти зовсім не в послідовному порядку \n\t- Тобто для кожного текселя нам потрібно окремо читати з комірки пам'яті\n- В AVX стандарті для цього існує інструкція gather що працює з 128бітними змінними\n- Але ми наразі використовуємо SSE, тому нам доведеться емулювати цю інструкцію\n- Створимо конструктор що приймає 4 значення вказівників, і записує їх у змінну","x":-5200,"y":-3257,"width":724,"height":241,"color":"#ff0095"}
	],
	"edges":[
		{"id":"ae3556a18a167d6c","fromNode":"5bdca359c005db93","fromSide":"right","toNode":"4288b984aad60e75","toSide":"left"},
		{"id":"82a157db82346436","fromNode":"1a97c98aa05ab750","fromSide":"bottom","toNode":"818ed6261e308c4f","toSide":"left"},
		{"id":"6fa46f8b8dce885e","fromNode":"aaa1e7fc8211faa4","fromSide":"bottom","toNode":"5bdca359c005db93","toSide":"left"},
		{"id":"2d110d60cca35269","fromNode":"aaa1e7fc8211faa4","fromSide":"bottom","toNode":"1a97c98aa05ab750","toSide":"left"},
		{"id":"6ccc6b114ccbb7c6","fromNode":"1aae8c12f9092dec","fromSide":"right","toNode":"4f9cd7064450b3b6","toSide":"left"},
		{"id":"7b1f895d092f4ea8","fromNode":"b9f2c2b0a9a1d137","fromSide":"bottom","toNode":"1aae8c12f9092dec","toSide":"left"},
		{"id":"6922182a17645ffb","fromNode":"494f249720db20b0","fromSide":"left","toNode":"0995444a478bf141","toSide":"right"},
		{"id":"d72961f082023343","fromNode":"bc06ee8f2df4a633","fromSide":"top","toNode":"b84d820fa89115b8","toSide":"right"},
		{"id":"61e324f91ba9432e","fromNode":"494f249720db20b0","fromSide":"top","toNode":"bc06ee8f2df4a633","toSide":"right"},
		{"id":"cc63912ee394f848","fromNode":"0995444a478bf141","fromSide":"left","toNode":"3706bda91331bda7","toSide":"right"},
		{"id":"6b0b6b2ba02525da","fromNode":"25711c6e788ea6d9","fromSide":"left","toNode":"ee07b13a61b4d7da","toSide":"right"},
		{"id":"ca9dd76af7704c8c","fromNode":"25711c6e788ea6d9","fromSide":"left","toNode":"49ed36c188ba89fd","toSide":"right"},
		{"id":"244cfc9e5ea58366","fromNode":"494f249720db20b0","fromSide":"bottom","toNode":"25711c6e788ea6d9","toSide":"right"},
		{"id":"30e56b373a695aa7","fromNode":"494f249720db20b0","fromSide":"bottom","toNode":"dbf7b6f7205b9815","toSide":"top"},
		{"id":"d49900bc5680df94","fromNode":"dbf7b6f7205b9815","fromSide":"left","toNode":"ef5ac9eb9027deb2","toSide":"right"},
		{"id":"fd71bf0e0c11c573","fromNode":"dbf7b6f7205b9815","fromSide":"left","toNode":"9e624eb9505672d4","toSide":"right"},
		{"id":"9c5a9eb569c5211c","fromNode":"1aaf7bd6f1a21903","fromSide":"left","toNode":"9740ef1a891894ba","toSide":"bottom"},
		{"id":"c0f428ceaa2bc8f6","fromNode":"494f249720db20b0","fromSide":"top","toNode":"1aaf7bd6f1a21903","toSide":"bottom"},
		{"id":"0538b3f66922d242","fromNode":"83e231da2b03920e","fromSide":"top","toNode":"e321b11231bb1f19","toSide":"bottom"},
		{"id":"ac3cd1593a205637","fromNode":"494f249720db20b0","fromSide":"right","toNode":"83e231da2b03920e","toSide":"bottom"},
		{"id":"e752f93d5016deb7","fromNode":"b7b80c227f6d3a67","fromSide":"top","toNode":"810ce1b66fa3c7ea","toSide":"bottom"},
		{"id":"13efe4751b8f2361","fromNode":"b7b80c227f6d3a67","fromSide":"top","toNode":"eabca5ae56be62a9","toSide":"bottom"},
		{"id":"c01ccc64dcda889b","fromNode":"d533082bb105c5f5","fromSide":"top","toNode":"9633be4df4d7973a","toSide":"bottom"},
		{"id":"af22d06631f6ea0e","fromNode":"494f249720db20b0","fromSide":"right","toNode":"d533082bb105c5f5","toSide":"bottom"},
		{"id":"fd095b4207b38f45","fromNode":"494f249720db20b0","fromSide":"right","toNode":"b7b80c227f6d3a67","toSide":"bottom"},
		{"id":"db0ce5fab4589626","fromNode":"494f249720db20b0","fromSide":"bottom","toNode":"edceca2e76b5c8b3","toSide":"left"},
		{"id":"21c289cc401b4f45","fromNode":"edceca2e76b5c8b3","fromSide":"right","toNode":"9e6b6694ac1d2350","toSide":"left"},
		{"id":"8c25023acdd07bbc","fromNode":"edceca2e76b5c8b3","fromSide":"right","toNode":"b3db9dfe58d37d7f","toSide":"left"},
		{"id":"28dc94e60181b2eb","fromNode":"edceca2e76b5c8b3","fromSide":"bottom","toNode":"12c1cfab1fd29bdb","toSide":"left"},
		{"id":"0db86e92950ff187","fromNode":"edceca2e76b5c8b3","fromSide":"bottom","toNode":"f8fd9b59babe5399","toSide":"left"},
		{"id":"21bbae48f8ae2d55","fromNode":"00d629b476244599","fromSide":"bottom","toNode":"d9248ea2a4d3593e","toSide":"left"},
		{"id":"5fdd707f33101c87","fromNode":"718e9c51b91b97e6","fromSide":"right","toNode":"114578ee7f0e8e87","toSide":"left"},
		{"id":"b4938bb53fb68ea2","fromNode":"d9248ea2a4d3593e","fromSide":"bottom","toNode":"473e60d7e6f836b6","toSide":"left"},
		{"id":"6ec379ba231259e5","fromNode":"5df4edc2c652f1f9","fromSide":"right","toNode":"45cbcaff81a15886","toSide":"left"},
		{"id":"0ae4f54087801a9a","fromNode":"8fcc6862e588c896","fromSide":"right","toNode":"97248420e985db14","toSide":"left"},
		{"id":"4f7a3b7b2ddca073","fromNode":"473e60d7e6f836b6","fromSide":"bottom","toNode":"5df4edc2c652f1f9","toSide":"left"},
		{"id":"f01dd2cfcd64b1e9","fromNode":"5df4edc2c652f1f9","fromSide":"left","toNode":"8fcc6862e588c896","toSide":"left"},
		{"id":"9f1b6cd1e37630c5","fromNode":"5978798d606553df","fromSide":"right","toNode":"9a4372317eb0cfed","toSide":"left"},
		{"id":"c17f1f0f5df36872","fromNode":"8fcc6862e588c896","fromSide":"left","toNode":"5978798d606553df","toSide":"left"},
		{"id":"2e9befaaa674e904","fromNode":"5978798d606553df","fromSide":"left","toNode":"e1b9e3a1ce8bb9a9","toSide":"left"},
		{"id":"381f0d061539ac61","fromNode":"e1b9e3a1ce8bb9a9","fromSide":"right","toNode":"35d0527a594db399","toSide":"left"},
		{"id":"a1d369ba08fdc260","fromNode":"35d0527a594db399","fromSide":"bottom","toNode":"8dbba0abb4e7bb2b","toSide":"left"},
		{"id":"773cbf52b7e21716","fromNode":"8dbba0abb4e7bb2b","fromSide":"right","toNode":"74d09458dc037e40","toSide":"left"},
		{"id":"27589b3adb223d4b","fromNode":"36ed3d56b711b939","fromSide":"right","toNode":"a368c1f3a4715a39","toSide":"left"},
		{"id":"14ca1280cf095d83","fromNode":"8dbba0abb4e7bb2b","fromSide":"left","toNode":"36ed3d56b711b939","toSide":"left"},
		{"id":"ca941f4d03431cc7","fromNode":"7b72085275ecb8ee","fromSide":"right","toNode":"8bc56573f4066f0e","toSide":"left"},
		{"id":"5958bc4f9d21486a","fromNode":"36ed3d56b711b939","fromSide":"left","toNode":"7b72085275ecb8ee","toSide":"left"},
		{"id":"25aa74c1e8eae86e","fromNode":"fddce592e54440be","fromSide":"right","toNode":"e2816a23937175c3","toSide":"left"},
		{"id":"70b2f9db0e56d7d9","fromNode":"7b72085275ecb8ee","fromSide":"left","toNode":"fddce592e54440be","toSide":"left"},
		{"id":"445b4f2c0466f88a","fromNode":"d9248ea2a4d3593e","fromSide":"bottom","toNode":"283bb8138671fdec","toSide":"right"},
		{"id":"7d0de64c04fb3a77","fromNode":"283bb8138671fdec","fromSide":"left","toNode":"718e9c51b91b97e6","toSide":"top"},
		{"id":"c1d7010a40c3f989","fromNode":"5bdca359c005db93","fromSide":"right","toNode":"b2234f84a506fcf4","toSide":"left"},
		{"id":"7def74f44919ae43","fromNode":"fe22a3cfa156c312","fromSide":"right","toNode":"c3da7081baadde0d","toSide":"left"},
		{"id":"9534583d4497c836","fromNode":"aaa1e7fc8211faa4","fromSide":"bottom","toNode":"fe22a3cfa156c312","toSide":"left"},
		{"id":"256f10911b525c46","fromNode":"31ef203fe4cb3850","fromSide":"top","toNode":"45827319646a112b","toSide":"bottom"},
		{"id":"dbd273c418a791a5","fromNode":"31ef203fe4cb3850","fromSide":"top","toNode":"ca05707f8327b9f7","toSide":"bottom"},
		{"id":"3151bf1b84f0ebc1","fromNode":"31ef203fe4cb3850","fromSide":"right","toNode":"c6cfdcbf91501546","toSide":"left"},
		{"id":"f0dc65ddfc8a0448","fromNode":"31ef203fe4cb3850","fromSide":"right","toNode":"86ab922c6c314b40","toSide":"bottom"},
		{"id":"9900631ca2853ae2","fromNode":"494f249720db20b0","fromSide":"right","toNode":"31ef203fe4cb3850","toSide":"left"},
		{"id":"ce2255afa2122bf0","fromNode":"288a511ef5cfbb78","fromSide":"bottom","toNode":"dc2e808920caefa8","toSide":"top"},
		{"id":"4e22463fbfcbe063","fromNode":"288a511ef5cfbb78","fromSide":"bottom","toNode":"148e545a4cb693b4","toSide":"top"},
		{"id":"406d3bb59de59864","fromNode":"494f249720db20b0","fromSide":"bottom","toNode":"288a511ef5cfbb78","toSide":"top"},
		{"id":"2de1c85dadd383e4","fromNode":"494f249720db20b0","fromSide":"right","toNode":"8fafcf91b3356123","toSide":"left"},
		{"id":"a1a95cda2355e5e4","fromNode":"8fafcf91b3356123","fromSide":"right","toNode":"8c7b4e8282cad153","toSide":"top"},
		{"id":"a2a30553ea60b941","fromNode":"8fafcf91b3356123","fromSide":"bottom","toNode":"0bb6c1a315ed5d7f","toSide":"top"},
		{"id":"c0e5f8526f43a092","fromNode":"494f249720db20b0","fromSide":"bottom","toNode":"de59723c21ccf7bb","toSide":"left"},
		{"id":"d5bcfe294447410f","fromNode":"de59723c21ccf7bb","fromSide":"left","toNode":"33ebd7866f99e1a2","toSide":"left"},
		{"id":"683c08a057b37b0d","fromNode":"1a97c98aa05ab750","fromSide":"bottom","toNode":"93edb38fa4b350d4","toSide":"right"},
		{"id":"dab45114f4c055ad","fromNode":"edceca2e76b5c8b3","fromSide":"bottom","toNode":"e11d6c824fff0f7a","toSide":"top"},
		{"id":"57e84117a7c68cf8","fromNode":"d1e9a2d5d0f48c4c","fromSide":"right","toNode":"c288a3885afff94a","toSide":"top"},
		{"id":"a70d0bb540991ba6","fromNode":"494f249720db20b0","fromSide":"right","toNode":"d1e9a2d5d0f48c4c","toSide":"left"},
		{"id":"b718f1344dfcb482","fromNode":"288a511ef5cfbb78","fromSide":"bottom","toNode":"e56ddd2f002f15a1","toSide":"top"},
		{"id":"ee6cd82dd966330a","fromNode":"00d629b476244599","fromSide":"bottom","toNode":"cde9a29a8c9af451","toSide":"right"},
		{"id":"384257853a88e1b7","fromNode":"cde9a29a8c9af451","fromSide":"left","toNode":"d7991c06b195e6f8","toSide":"right"},
		{"id":"ca24a200e5dc4451","fromNode":"cde9a29a8c9af451","fromSide":"top","toNode":"0c23bfeaec2691ab","toSide":"bottom"},
		{"id":"4c59863d79cce461","fromNode":"2617559357df7635","fromSide":"left","toNode":"3891de91b44452f7","toSide":"right"},
		{"id":"096cf28c0be9456e","fromNode":"3891de91b44452f7","fromSide":"left","toNode":"5dd7342e64c9b894","toSide":"right"},
		{"id":"dc1225be563e0bfd","fromNode":"d9248ea2a4d3593e","fromSide":"bottom","toNode":"2617559357df7635","toSide":"right"},
		{"id":"910bb368d4b8b0f4","fromNode":"e1b9e3a1ce8bb9a9","fromSide":"left","toNode":"03ed48531405fee3","toSide":"left"},
		{"id":"3938a30cafd651ac","fromNode":"03ed48531405fee3","fromSide":"right","toNode":"33f230e49a85503c","toSide":"left"},
		{"id":"05fc07ca6081d04d","fromNode":"f839e7c1b4bc3610","fromSide":"right","toNode":"2903c6a74f871d81","toSide":"left"},
		{"id":"764f9eade2f6227a","fromNode":"c26d6c89fdb20f64","fromSide":"right","toNode":"576ff9951f4fdc64","toSide":"left"},
		{"id":"eb5c07c21b28a041","fromNode":"0a9c29be2e11ec9d","fromSide":"right","toNode":"849f4c1d81048bc3","toSide":"left"},
		{"id":"b0ec7fa53f2a7db3","fromNode":"c2dfc0c36a9ec46c","fromSide":"right","toNode":"8cdb9c49e4c009e2","toSide":"left"},
		{"id":"2d4861b75fb4ab58","fromNode":"ca00ad606e568134","fromSide":"right","toNode":"9da37800515fba0d","toSide":"left"},
		{"id":"36f8904bbcb9ba16","fromNode":"9f5ebab3e63a1e4a","fromSide":"right","toNode":"c5b75433255c43d5","toSide":"left"},
		{"id":"4c6e0e23fa197040","fromNode":"721385c174017fc0","fromSide":"right","toNode":"49ee7915c93b1087","toSide":"left"},
		{"id":"92027cf24fe05990","fromNode":"11030826cf91a06c","fromSide":"right","toNode":"5159bb8ced2bedbc","toSide":"left"},
		{"id":"687d87db8c2d3041","fromNode":"33f230e49a85503c","fromSide":"bottom","toNode":"11030826cf91a06c","toSide":"left"},
		{"id":"8540047c94e46a7d","fromNode":"11030826cf91a06c","fromSide":"left","toNode":"721385c174017fc0","toSide":"left"},
		{"id":"624c2abfc91fe02b","fromNode":"721385c174017fc0","fromSide":"left","toNode":"9f5ebab3e63a1e4a","toSide":"left"},
		{"id":"72f0e7d9ad31da87","fromNode":"9f5ebab3e63a1e4a","fromSide":"left","toNode":"ca00ad606e568134","toSide":"left"},
		{"id":"f900ca889b1ee9a4","fromNode":"ca00ad606e568134","fromSide":"left","toNode":"c2dfc0c36a9ec46c","toSide":"left"},
		{"id":"6a9543d8e58a68bc","fromNode":"c2dfc0c36a9ec46c","fromSide":"left","toNode":"0a9c29be2e11ec9d","toSide":"left"},
		{"id":"c3051e63c7d88a82","fromNode":"0a9c29be2e11ec9d","fromSide":"left","toNode":"c26d6c89fdb20f64","toSide":"left"},
		{"id":"334d4f1acb9aee21","fromNode":"c26d6c89fdb20f64","fromSide":"left","toNode":"f839e7c1b4bc3610","toSide":"left"}
	]
}